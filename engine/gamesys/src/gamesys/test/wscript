#! /usr/bin/env python

import sys, os

import Task, TaskGen
from TaskGen import extension, declare_extension

sys.path.insert(0, "src")
import waf_gamesys

if sys.platform == "win32":
    os.environ["PYTHONPATH"] = os.environ["PYTHONPATH"] + ";default/proto;../src"
else:
    os.environ["PYTHONPATH"] = os.environ["PYTHONPATH"] + ":default/proto:../src"

def configure(conf):
    pass

def build(bld):
    dirs = ['animationset',
            'camera',
            'collection_proxy',
            'collision_object',
            'convex_shape',
            'emitter',
            'factory',
            'font',
            'fragment_program',
            'gui',
            'input',
            'label',
            'light',
            'material',
            'mesh',
            'model',
            'particlefx',
            'render',
            'render_script',
            'display_profiles',
            'resource',
            'script',
            'sound',
            'spine',
            'sprite',
            'tile',
            'texture',
            'vertex_program',
            'window']
    exts = ['animationset',
            'camera',
            'collisionobject',
            'convexshape',
            'emitter',
            'factory',
            'font',
            'fp',
            'gui',
            'gui_script',
            'gamepads',
            'input_binding',
            'jpg',
            'label',
            'light',
            'material',
            'mesh',
            'model',
            'particlefx',
            'png',
            'render',
            'render_script',
            'display_profiles',
            'resource',
            'script',
            'sprite',
            'vp',
            'wav',
            'sound',
            'spinescene',
            'spinemodel']
    test_task_gen = bld.new_task_gen(features = 'cxx cprogram test',
                                     includes = '../../../src ../../../proto %s' % (dir),
                                     uselib = 'GTEST DMGLFW GAMEOBJECT DDF RESOURCE GRAPHICS_UTIL PHYSICS RENDER GRAPHICS_NULL PLATFORM_SOCKET SCRIPT LUA EXTENSION INPUT HID_NULL PARTICLE RIG GUI SOUND_NULL DLIB',
                                     uselib_local = 'gamesys',
                                     proto_gen_py = True,
                                     content_root='.',
                                     target = 'test_gamesys')
    test_task_gen.find_sources_in_dirs('. ' + ' '.join(dirs), exts)
    test_task_gen.install_path = None

    if bld.env.PLATFORM != "armv7-darwin" and bld.env.PLATFORM != "arm64-darwin":
        bld.add_subdirs('fontview')
