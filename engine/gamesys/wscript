#! /usr/bin/env python

VERSION='0.1'
APPNAME='gamesys'

srcdir = '.'
blddir = 'build'

import sys, os, re
import waf_ddf, waf_graphics, waf_dynamo, waf_physics, waf_render

def init():
    pass

def set_options(opt):
    opt.sub_options('src')
    opt.tool_options('waf_dynamo')

def configure(conf):
    conf.check_tool('waf_dynamo')
    conf.check_tool('java')

    waf_ddf.configure(conf)
    waf_graphics.configure(conf)
    waf_physics.configure(conf)
    waf_render.configure(conf)

    conf.find_program('script_doc', var='SCRIPT_DOC', mandatory = True)

    platform = conf.env['PLATFORM']

    if platform == "darwin":
        conf.env.append_value('LINKFLAGS', ['-framework', 'Cocoa', '-framework', 'OpenGL', '-framework', 'OpenAL', '-framework', 'AGL', '-framework', 'IOKit', '-framework', 'Carbon', '-framework', 'CoreVideo'])
    elif re.match('arm.*?darwin', platform):
        pass
    elif re.match('arm.*?android', platform):
        conf.env.append_value('LINKFLAGS', ['-lEGL', '-lGLESv1_CM', '-lGLESv2', '-landroid'])
    elif platform == "linux":
        conf.env['LIB_X'] = ['Xext', 'X11', 'Xi', 'GL', 'GLU']
    elif platform == "win32":
        conf.env.append_value('LINKFLAGS', ['opengl32.lib', 'user32.lib', 'shell32.lib', 'xinput.lib'])

    conf.env.append_value('CPPPATH', "default/src")
    conf.env['LIB_GTEST'] = 'gtest'
    conf.env['STATICLIB_DLIB'] = 'dlib'
    conf.env['STATICLIB_DDF'] = 'ddf'
    conf.env['STATICLIB_RESOURCE'] = 'resource'
    conf.env['STATICLIB_GAMEOBJECT'] = 'gameobject'
    conf.env['STATICLIB_EXTENSION'] = 'extension'
    conf.env['STATICLIB_SCRIPT'] = 'script'
    conf.env['STATICLIB_RENDER'] = 'render'
    conf.env['STATICLIB_GRAPHICS_NULL'] = 'graphics_null'
    conf.env['STATICLIB_PARTICLE'] = 'particle'
    conf.env['STATICLIB_GUI'] = 'gui'
    conf.env['STATICLIB_SOUND_NULL'] = 'sound_null'
    conf.env['STATICLIB_INPUT'] = 'input'
    conf.env['STATICLIB_HID'] = 'hid'
    conf.env['STATICLIB_HID_NULL'] = 'hid_null'
    conf.env['STATICLIB_GRAPHICS'] = 'graphics'
    conf.env['STATICLIB_DMGLFW'] = 'dmglfw'

    conf.env.append_unique('CCDEFINES', 'DLIB_LOG_DOMAIN="GAMESYS"')
    conf.env.append_unique('CXXDEFINES', 'DLIB_LOG_DOMAIN="GAMESYS"')

    conf.sub_config('src')

def build(bld):
    sys.path.insert(0, bld.path.find_dir('src').abspath())
    sys.path.insert(0, os.path.abspath('build/default/proto'))

    bld.add_subdirs('content')
    bld.add_group()
    bld.add_subdirs('src')

    bld.install_files('${PREFIX}/bin', 'tools/meshc.py', chmod=493)

import Build, Options
import os, subprocess
def shutdown():
    if not Options.commands['build']:
        return
    waf_dynamo.run_gtests(valgrind = True)
