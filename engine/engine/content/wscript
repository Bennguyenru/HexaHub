#! /usr/bin/env python
import os, shutil, zipfile

import Node

def set_options(opt):
    pass

def package_bob(self):
    bob = self.outputs[0].bldpath(self.env)
    bob_light = os.path.join(self.env['DYNAMO_HOME'], 'share/java/bob-light.jar')
    shutil.copyfile(bob_light, bob)
    zip = zipfile.ZipFile(bob, 'a')
    for input in self.inputs:
        if input.get_type() == Node.FILE:
            name = os.path.relpath(input.nice_path(), 'content').replace('\\', '/')
            zip.write(input.srcpath(), name)
    zip.close()

def build(bld):
    obj = bld.new_task_gen(source = [])
    obj.find_sources_in_dirs('materials')

    builtins = bld.new_task_gen(features='barchive',
                                source_root='default/content',
                                resource_name='builtins',
                                use_compression=True)

    builtins.find_sources_in_dirs('builtins/input builtins/render builtins/fonts builtins/connect builtins/materials builtins/graphics builtins/scripts')

    builtins_release = bld.new_task_gen(features='barchive',
                                source_root='default/content',
                                resource_name='builtins_release',
                                use_compression=True)

    builtins_release.find_sources_in_dirs('builtins/fonts')

    for d in ['fonts', 'input', 'render', 'materials', 'graphics', 'scripts']:
        bld.install_files('${PREFIX}/content/builtins/%s' % d, 'builtins/%s/*' % d)

    bld.new_task_gen(name = 'bob-engine',
                     source = bld.path.ant_glob('builtins/**'),
                     target = 'bob-engine.jar',
                     rule = package_bob,
                     always = True)
    bld.install_files('${PREFIX}/share/java', 'bob-engine.jar')


def configure(conf):
    pass

