#! /usr/bin/env python
import os, re
from waf_dynamo import apidoc_extract_task

def configure(conf):
    pass

def build(bld):
    embed_source = ''

    source = []

    if bld.env.PLATFORM in ('armv7-darwin', 'arm64-darwin', 'x86_64-ios'):
        source += ['iac_ios.mm', 'iac.cpp']
    elif re.match('arm.*?android', bld.env.PLATFORM):
        source += ['iac_android.cpp', 'iac.cpp']

        classpath = ['%s/ext/share/java/android.jar' % bld.env.DYNAMO_HOME,
                     '%s/share/java/gamesys_android.jar' % bld.env.DYNAMO_HOME]
        classpath = os.pathsep.join(classpath)

        bld.new_task_gen(features='javac seq',
                         classpath=classpath,
                         source_root='java')

        bld.env["JAVACFLAGS"] = '-g -source 1.7 -target 1.7'

        bld.new_task_gen(features='jar seq dex',
                         basedir='java',
                         destfile='iac_android.jar')

        bld.install_files('${PREFIX}/share/java', 'iac_android.jar')

    else:
        source = ['iac_null.cpp']

    iac = bld.new_task_gen(features = 'cxx cstaticlib',
                            includes = '.',
                            source = source,
                            target = 'iacext')

    apidoc_extract_task(bld, ['iac.cpp'])


