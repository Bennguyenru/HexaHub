#! /usr/bin/env python
import sys, re, os
import waflib.Options
from BuildUtility import create_build_utility

def build(bld):
    build_util = create_build_utility(bld.env)

    sources = []
    includes = []

    platform = bld.env.PLATFORM

    if platform == 'darwin' or platform == 'x86_64-darwin':
        sources  = bld.path.ant_glob(['*', 'cocoa/*.m'])
        includes = '. cocoa'
    elif platform in ('arm64-darwin', 'x86_64-ios'):
        sources  = bld.path.ant_glob(['*.c', 'ios/*.m', 'ios/app/*.m'])
        includes = '. ios'
    elif re.match('arm.*?android', platform):
        sources  = bld.path.ant_glob(['*.c', 'android/*.c'])
        includes = '. android'
    elif platform == 'linux' or platform == 'x86_64-linux':
        sources  = bld.path.ant_glob(['*.c', 'x11/*.c'])
        includes = '. x11'
    elif 'win32' in platform:
        sources  = bld.path.ant_glob(['*.c', 'win32/*.c'])
        includes = '. win32'
    elif 'web' in platform:
        sources  = bld.path.ant_glob('js-web/*.c')
        includes = '. js-web'

    dmglfw = bld.stlib(features     = 'c',
                       install_path = build_util.get_library_path(),
                       source       = sources,
                       includes     = includes, 
                       target       = 'dmglfw')
