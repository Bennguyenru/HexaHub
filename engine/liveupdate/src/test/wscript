#!/usr/bin/env python

def init(ctx):
    pass

def options(opt):
    pass

def configure(conf):
    pass

def build(bld):
    uselib = ['TESTMAIN', 'DLIB', 'SOCKET', 'DDF', 'THREAD', 'EXTENSION', 'PROFILE_NULL', 'RESOURCE', 'SCRIPT', 'LUA']
    exported_symbols = ['LiveUpdateExt', 'ResourceProviderFile']

    for impl in ('', 'null'):
        local_lib = 'liveupdate'
        suffix = ''
        features = []
        defines = []
        if impl == 'null':
            local_lib += '_' + impl
            suffix += '_' + impl
            features = ['skip_test']
            defines = ['DM_LU_NULL_IMPLEMENTATION'] # if we use null implementation, then we can't test internal function

        if impl != 'null': # it's only testing private functions, to we don't expect it to work with the _null implementation
            bld.program(features = 'cxx test'.split() + features,
                        includes = '../../../src',
                        use      = uselib + [local_lib],
                        defines  = defines,
                        exported_symbols = exported_symbols,
                        web_libs = ['library_sys.js'],
                        target   = 'test_liveupdate_job' + suffix,
                        source   = 'test_liveupdate_job.cpp')


def shutdown(ctx):
    pass
