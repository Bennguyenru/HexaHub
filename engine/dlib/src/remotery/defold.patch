diff --git a/engine/dlib/src/remotery/lib/Remotery.c b/engine/dlib/src/remotery/lib/Remotery.c
index 4d7f53c30..8a5f8c44a 100644
--- a/engine/dlib/src/remotery/lib/Remotery.c
+++ b/engine/dlib/src/remotery/lib/Remotery.c
@@ -6443,7 +6443,7 @@ static rmtError Remotery_SerialisePropertySnapshots(Buffer* bin_buf, Msg_Propert
             case RMT_PropertyType_rmtGroup:
                 rmtTry(Buffer_Write(bin_buf, empty_group, 16));
                 break;
-            
+
             // All value ranges here are double-representable, so convert them early in C where it's cheap
             case RMT_PropertyType_rmtBool:
                 rmtTry(Buffer_WriteF64(bin_buf, snapshot->value.Bool));
@@ -9915,9 +9915,17 @@ static void RegisterProperty(rmtProperty* property, rmtBool can_lock)
             }
 
             // Calculate the name hash and send it to the viewer
-            name_len = strnlen_s(property->name, 256);
-            property->nameHash = _rmt_HashString32(property->name, name_len, 0);
-            QueueAddToStringTable(g_Remotery->mq_to_rmt_thread, property->nameHash, property->name, name_len, NULL);
+/// DEFOLD
+            const char* name = property->name;
+            if (name[0]=='r' && name[1]=='m' && name[2]=='t' && name[3]=='p' && name[4]=='_')
+            {
+                name = name + 5;
+            }
+
+            name_len = strnlen_s(name, 256);
+            property->nameHash = MurmurHash3_x86_32(name, name_len, 0);
+            QueueAddToStringTable(g_Remotery->mq_to_rmt_thread, property->nameHash, name, name_len, NULL);
+/// END DEFOLD
 
             // Generate a unique ID for this property in the tree
             property->uniqueID = parent_property->uniqueID;
