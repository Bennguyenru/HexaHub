#! /usr/bin/env python
import os, re

def configure(conf):
    pass

def build(bld):
    embed_source = ''
    source = []

    if re.match('arm.*?darwin', bld.env.PLATFORM):
        source += ['push_ios.mm']
    elif re.match('arm.*?android', bld.env.PLATFORM):
        source += ['push_android.cpp']

        classpath = ['%s/ext/share/java/android.jar' % bld.env.DYNAMO_HOME,
                     '%s/ext/share/java/android-support-v4.jar' % bld.env.DYNAMO_HOME,
                     '%s/ext/share/java/google-play-services.jar' % bld.env.DYNAMO_HOME,
                     '%s/share/java/gamesys_android.jar' % bld.env.DYNAMO_HOME]
        classpath = os.pathsep.join(classpath)

        bld.new_task_gen(features='javac seq',
                         classpath=classpath,
                         source_root='java')

        bld.env["JAVACFLAGS"] = '-g -source 1.6 -target 1.6'

        bld.new_task_gen(features='jar seq dex',
                         basedir='java',
                         destfile='push_android.jar')

        bld.install_files('${PREFIX}/share/java', 'push_android.jar')

    else:
        source += ['push_null.cpp']

    push = bld.new_task_gen(features = 'cxx cstaticlib',
                            includes = '.',
                            source = source,
                            target = 'pushext')

