#! /usr/bin/env python
import os, re

def configure(conf):
    pass

def build(bld):
    embed_source = ''
    source = []

    bld.new_task_gen(source = 'iap_ios.mm',
                     target = 'iap_doc.sdoc',
                     rule = '${SCRIPT_DOC} ${SRC} ${TGT}')

    bld.new_task_gen(source = 'iap_ios.mm',
                     target = 'iap_doc.json',
                     rule = '${SCRIPT_DOC} ${SRC} -t json ${TGT}')

    source += ['iap_common.cpp']
    if re.match('arm.*?darwin', bld.env.PLATFORM):
        source += ['iap_ios.mm']
    elif re.match('.*?android', bld.env.PLATFORM):
        source += ['iap_android.cpp']

        classpath = ['%s/ext/share/java/android.jar' % bld.env.DYNAMO_HOME,
                     '%s/ext/share/java/android-support-v4.jar' % bld.env.DYNAMO_HOME,
                     '%s/ext/share/java/in-app-purchasing-2.0.61.jar' % bld.env.DYNAMO_HOME, # amazon
                     '%s/share/java/gamesys_android.jar' % bld.env.DYNAMO_HOME]
        classpath = os.pathsep.join(classpath)

        bld.new_task_gen(features='javac seq',
                         classpath=classpath,
                         source_root='java')

        bld.env["JAVACFLAGS"] = '-g -source 1.6 -target 1.6'

        bld.new_task_gen(features='jar seq dex',
                         basedir='java',
                         destfile='iap_android.jar')

        bld.install_files('${PREFIX}/share/java', 'iap_android.jar')
    elif 'js-web' in bld.env.PLATFORM:
        bld.install_files('${PREFIX}/lib/js-web/js', '../src/js/library_facebook_iap.js', postpone = False)
        source += ['iap_emscripten.cpp']
    else:
        source += ['iap_null.cpp']

    bld.install_files('${PREFIX}/share/doc', 'iap_doc.sdoc')
    bld.install_files('${PREFIX}/share/doc', 'iap_doc.json')

    iap = bld.new_task_gen(features = 'cxx cstaticlib',
                           includes = '.',
                           source = source,
                           target = 'iapext')

