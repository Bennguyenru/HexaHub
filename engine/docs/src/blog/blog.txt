:max-width: 45em

GUI clipping (Release 1.2.48)
-----------------------------
_January 12, 2015_

This release includes hierachial clipping stencils for GUI nodes (see http://doc.defold.com/doc/clipping[Clipping documentation]).
Documentation for clipping and fonts has been added.

=== Fixes

* Auto-handling of gui node IDs in the editor.
* Delta time information passed to scripts when setting “variable_dt” is now correct
* Optimization of Sprite, Spine and Model components.
* Zero size GUI box nodes caused triangulation error on some devices.
* Android APK bundles only include referenced files.
* Improved connectivity between dev app and editor.
* Fix for tile source generation being extremely slow.

Distance field fonts (Release 1.2.47)
-------------------------------------
_December 2, 2014_

=== New features

* Distance field fonts.
* Optimized Atlas layout.
* Inner padding in Atlases.
* Bundling support with bob.jar (see Bob documentation).
* Support for custom GUI material.
* Dependent libraries are cached on the client (major increase of sync speed).

=== Fixes 

* Improved batching for sprites and spine models.
* Fixed incorrect conversion of transforms when loading spine models.
* GUI font rendering clipped outline.
* Prevent null dereference when no glyph exists for the queried character and the fallback (~) in the font.
* go.delete() now gives a warning if invoked with nil argument.
* Sprite batching no longer breaks on differences in Z. Same goes for Spine model batching.

=== Documentation updates 

* New Spine animation documentation added.
* New Bob building documentation added
* Updated properties documentation.
* GUI API documentation updates and fixes.
* Sprite API documentation additions.
* Collision Object API documentation additions.


LuaJIT (Release 1.2.46)
-----------------------
_November 17, 2014_

=== New features

* Switch to LuaJIT (Lua 5.1). (see notes below)
* 9-slice support in GUI (see http://doc.defold.com/doc/gui#anchor-slice9 how to use)
* Pie nodes (advanced circular/elliptical shapes) support in GUI (see http://doc.defold.com/doc/gui#anchor-pie how to use)
* Lua sound mixer API (see http://doc.defold.com/doc/sound how to use)
* New Spine animation features: animation of slot color, visibility and draw order
* Support for premultiplied alpha in image.load()

LuaJIT (Lua Just in Time compilation) gives an average 100% performance gain in Lua scripts and improves garbage collection. There are some incompatibilities with the earlier Lua runtime which may cause you problems:

* The varargs syntax has to follow Lua 5.1 syntax (see http://www.lua.org/manual/5.1/manual.html#2.5.9) or you will get a run-time error
* Invalid string escape sequences in regexps and translado files yields a build-time error

=== Fixes 

* Extrude Borders on Atlas with palettized images bug fixed
* iOS orientation problem in the dev app fixed
* Android: Keyboard was not hidden when app was deactivated
* Spine component was leaking memory until the collection was destroyed
* Hardware mix-rate set on Android for minimal latency
* Spine models were not rendered on windows
* Problem when rotating GUI elements around X/Y axis fixed
* Crash when doing go.get() on un-initialized collision object fixed
* Spine animation crash fixed
* Assertion on exiting application when destroying Spine components fixed
* bob.jar now listed among the artifacts on d.defold.com

=== Documentation updates

* Slice 9 section added to GUI documentation
* Pie nodes section added to GUI documentation
* Cameras documentation
* Sounds documentation
* HTML5 documentation
* Spine  API docs and autocompletion
* Http API docs and autocompletion
* Image API docs and autocompletion
* Json API docs and autocompletion
* Zlib API docs and autocompletion

OS X Yosemite support (Release 1.2.45)
--------------------------------------
_October 28, 2014_

=== New features

* OS X Yosemite support.
* Module support in render scripts.
* Support for resources larger than 16 MB. (Resources larger than 1MB get dynamically allocated)
* Lua backtraces in the event of an error.

=== Fixes

* Fixed standalone “bob” that was broken on all platforms except OS X.
* Particle delay bug fixed. 
* Android bundling on Windows fixed.
* Filtering of spine weights when there is more than 4 weights per vertex in spine scenes.
* Sound configuration parameters typo fixed.
* Fixed error where gui.cancel_animation() did not handle composite properties.
* Fixed too small buffer for facebook.show_dialog() (Android).
* Delta time information passed to scripts fixed.

The following new documents have been added:

* Workflow
* Libraries
* Debugging
* Models
* Rendering
* Materials

Bug fix release (Release 1.2.44)
--------------------------------
_September 29, 2014_

This is a minor release which only fixes a few critical bugs.

=== Fixes

* Crash when running on iOS 8 
* Building projects with Windows editor 
* Verify Android bundling on Windows

Lua ZeroBrane debugging support (Release 1.2.43)
------------------------------------------------
_September 24, 2014_

=== New features

* Lua debugging is now supported, both locally and on device. See the scripting guide for details on how to use it.
* Support for finding devices over Wi-Fi even if a wired connection is present. The time it takes to find a device is now much shorter as well.
* Read only ‘size’ property is added to sprites.
* Support for cubemaps is added. It is available as a new resource type which can be created in the editor, and then mapped as a texture to models.
* Exposed more shader constant types: VIEW, PROJECTION, NORMAL and WORLDVIEW
* Optimized asset bundling: unused assets are not included. This decreased the bundles by 70% on the tested games.
* Libraries are automatically updated when synchronizing content.
* Support for stencil buffer operations is added, see the reference for details.
* Android binary produced with most recent tools (build 20.0.0, platform 23.0.2) and NDK (10b)
* iOS SDK 8.0 supported.

=== Bug fixes

* Particle editor crash
* Lua assertion bug when playing Particle FX
* 32-bit size limit on integer keys when serializing Lua tables. The previous limit was 16-bit and the format is backwards compatible.
* Logging from device is more fluently displayed in the editor.

Shared Lua state (Release 1.2.42)
---------------------------------
_September 5, 2014_

You can now opt to share a single global state between render, GUI and script contexts. Projects default to the current behaviour of not sharing Lua state. In order to turn on shared Lua state, open the "game.project" file and navigate to the ‘script’ section. Checking the ‘shared_state’ box enables the feature. New Defold projects defaults to enabling the shared state.

=== Fixes

* When the user open a collection, select a game object in it, and collapse the collection node in the Outline view, the editor sometimes crashed. This is now fixed.
* Fixed infinite recursion when pprint()-ing a table containing circular references.
* Editor crash fixed. The crash occurred when go.properties was used to add custom properties matching the name of an existing fundamental property (e.g. ‘id’). There is also a warning about such restriction added to the GUI.
* It is now permitted to do simultaneous editing of properties of game objects, when multiple selections are made in the outline view.
* Fixed incorrect assert when calling render.get_render_target_width(). 

HTML5 target platform (Release 1.2.41)
--------------------------------------
_August 29, 2014_

[IMPORTANT]
====
It seems like some users are still using 1.2.37. Please check your version in *Help > About Defold*, if you are using 1.2.37 you need to manually download the latest version. This is only necessary once, for future versions the automatic updating will work as regular.
====

In this release, we present a first offering of support for HTML5 as a target platform. See the html://doc.defold.com/doc/html5[HTML5 documentation] for details.

Bundling accessible in the Project menu:

* Click *Project > Bundle* to access the different options of bundling your game for a target platform.

10 new documents have been published on the documentation page at defold.com. Among the new documents are:

* 2D Graphics
* GUI
* Application lifecycle
* Physics
* an updated Introduction

Library support (Release 1.2.40)
--------------------------------
_July 18, 2014_

This release brings support for using projects as libraries. See the http://doc.defold.com/doc/libraries[Library documentation] on how it works. In addition, three new properties have been exposed for collision object:

* Linear Damping
* Angular Damping
* Locked Rotation (disables the angular velocity of the object)

When scripting, you can also access the following properties:

* linear_damping (get/set)
* angular_damping (get/set)
* linear_velocity (get)
* angular_velocity (get)
* mass (get)

Spine support (Release 1.2.39)
------------------------------
_July 15, 2014_

This release brings in support for http://esotericsoftware.com[Spine] assets. See the http://doc.defold.com/doc/spine[Spine documentation] for details).

=== Features

* Support for regions (image attachments) and meshes (rigid and skinned)
* Bone animations
* Keys for translation/rotation/scale
* All curve types supported
* Same playback modes as go.animate() accepts
* Keyed events with payloads
* The Spine skin feature (changing the graphics while retaining the animations)
* Blending when switching animations
* Hot reload while running the game
* Tinting through shader (like sprites)
* Spine skeleton replicated in the scene graph for dynamic attachment, position queries, etc.

Release channels (Release 1.2.38)
---------------------------------
_June 11, 2014_

[IMPORTANT]
====
Automatic updates does NOT work for 1.2.38 and you must download 1.2.38 manually. This is due to a new Java version and a known bug in the Eclipse p2 distribution system (file-locking and Windows).
====

=== Features

* Distribution and new download site, stable and beta channels
* iOS SDK 7.1
* facebook.login() is compatible with coroutines (as are the other extension functions dealing with call-back arguments)
* The device detection system is more tolerant with poorly formatted responses from devices
* Java is now bundled in the OS X version
* Updated to Java 8

=== Download site

The download site has been rewritten from the ground up and is now located at http://d.defold.com. By default http://d.defold.com redirects to the stable channel http://d.defold.com/stable. The site contains links to defold but also related artifacts, e.g. dmengine, etc. Moreover, we've created packages for resources required for custom packaging previously extracted from plugins:

* android.jar
* android-resources.zip
* classes.dex
* builtins.zip

Additionally we keep previous released versions such that a project can pin to a specific version. The URL syntax is /archive/SHA1/... where SHA1 is the release identifier. In order to always use latest version a meta-info files in json-format is available on the site: http://d.defold.com/stable/info.json

    {"version": "1.2.38", "sha1": "d0fdb9c5fc1ac46debbbc39e8ac572b6fa7652f7"}

=== Channels

With release 1.2.38 we have support for release channels--stable and beta. The stable channel is default and the primary purpose for the beta channel is to simplify the QA-process and to pre-release features for testing to stakeholders. The beta product's splash is branded with a beta-ribbon and the launch icon is colored differently.

Fixes (Release 1.2.37)
----------------------
_April 28, 2014_

=== Fixes

* Hierarchical GUI nodes were not rendered correctly when their parent had another pivot than "center". If you have countered for this bug when building your scenes (visually placing them "wrong" to have them appear "correct"), you need to now place them "correct" in the editor.
* Support for the syntax: local my_lib = require("my_lib")
* Support for progressive JPEG (dynamic textures)
* Fixed issue when logging in through Facebook (iOS), and the game is killed by the OS when switching to the FB app
* After rebooting the game while running on a device, there could be socket name collisions, causing the game to stop working. This was a special case when you load dynamic collections from dynamic collections (like in CCVS).
* Crash on Android when loading models
* Android devices are now listed as "<manufacturer>-<model> (<ip>)" instead of "localhost (<ip>)" in the targets menu
** They also don't fight for the same slot, all are displayed in the target menu
* Issue with HTTP cache index not being correctly updated
* Potential mem leak in previous sound system
* Various issues involved in detecting devices and running the game on them, e.g.:
* Editor restart sometimes required for device discovery
* Logging in editor from device stops working sometimes

Fixes (Release 1.2.36
---------------------
_April 7, 2014_

This release only contain some fixes for IAP verification and tracking on Android.

Crash fix (Release 1.2.35)
--------------------------
_Mars 31, 2014_

* IAP product listing (iap.list) problem with returned empty lists has been fixed.
** Price info added on Android for tracking (price and currency_code)
* Boot crash

=== More about the crash

The reason was that a C std lib function called mktime consumed an exceptional amount of stack on Android 4.3. mktime is called by the HTTP service, which runs on a separate thread and caused a stack overflow on that thread and subsequent crashes in random places, because of the small stack allocated to that thread. mktime is used for time conversion, which explains the differing frequencies of the crash, which basically were related to the time of day when the app was started (verified on device actually by setting the local time, much less frequent at night time for example). In other words, it consumed different amounts of stack depending on when in the day it was called.

Fixes (Release 1.2.34)
----------------------
_Mars 25, 2014_

* Dev app installation works for iOS 7.1
* Android push init threading issue, causing push to fail on devices that wanted to show a dialog ("upgrade your google play service"). Possibly other issues as well.
* Product list returned from IAP module has the same format on both iOS and Android (products keyed by their ids)
* The headless engine (dmengine_headless) can handle animation and access to shader constants

Android fixes (Release 1.2.33)
------------------------------
_Mars 18, 2014_

We found out that there is a way to do auto-completion on local "words" (e.g. variables). Open Preferences, search for "Keys", then "Word Completion" in the filter (it's Alt+/ on Linux). Apparently we had the feature all along without knowing about it.

== Android fixes

* installLocation="auto" in AndroidManifest.xml
* Orientation fix when launching app and device has "the other" orientation
* Android FB SDK upgraded to 3.7
* Disabled auto publish install in Android FB SDK
* Various crashes on Android when launching app or terminating, then launching
* Android installation referrer support (only available on android, adtruth.get_referrer(), which returns nil for no referrer)
* sys.open_url supported on Android

Sound system (Release 1.2.32)
-----------------------------
_Mars 4, 2014_

=== Contents

* New amazing sound system, featuring:
** Improved performance and hitch-free: usually 0-1.2 ms per frame instead of several 100 ms before (hitches)
** Better mixing and loop handling
** No license problems
** Unit tested
* Fixed push crash
* Android virtual keyboard bug fixes:
** Freeze when back is pressed while virtual keyboard is shown (OS 4.1 and 4.2)
** Proper handling of the special characters reached by holding a key for a long time, e.g. / and @
** Special characters like å,ä,ö also handled

Fixes (Release 1.2.31)
----------------------
_February 26, 2014_

* Fixed Android crashes related to invite list in FB
* Android app consumes less CPU when running in the background (WIP, more to do here related to sound)
* IAP product listing provides "currency_code", which is only set for iOS (always set to "Unknown" on Android)
* Ad identifiers on iOS in sys.get_sys_info() added.
* Upgraded NDK to latest
* Use of alut (sound util lib) has been removed due to licensing issues

Minor fixes (Release 1.2.30)
----------------------------
_February 13, 2014_

Release 1.2.30 contains some smaller fixes. We have optimized how the engine behaves as a background process on various platform and consequently had to drop support for Windows XP, meaning that we now support Windows Vista and up.

=== Fixes

* Smoother sound buffering
* Optimized shaders for tile maps, sprites and debug lines
* Crash at engine termination
* The engine respects the settings for going to sleep on iOS (would stay alive before)

Hierarchical Gui (Release 1.2.29)
---------------------------------
_February 11, 2014_

We have finally added support for hierarchical GUIs.
We simultaneously ported the old GUI editor to the new Scene editor, which should make it much easier to use.
We have also added a new layer feature, which allows you to structure your GUI nodes however you want, while still retaining control of the order in which they are rendered.
Documentation about this will come at a later time.

=== Other fixes in this release

* Improved launch image handling on iOS (no black screen!)
* Delays in go.animate were not properly handled for composite animations

Yet more various fixes (Release 1.2.28)
---------------------------------------
_January 28, 2014_

1.2.28 brings more smaller fixes:

* math.random(x, y) would in rare cases return values larger than y
* Animations started through link:/ref/go#go.animate[go.animate] could incorrectly remove existing delayed animations
* Better fallback in editor when starting the game and the current target device cannot be located

Even more various fixes (Release 1.2.27)
----------------------------------------
_January 9, 2014_

1.2.27 brings more smaller fixes:

* Sprite scale (vmath.vector3) can be accessed through link:/ref/go#go.get[go.get]/link:/ref/go#go.set[go.set]/link:/ref/go#go.animate[go.animate]
* Functions for measuring the size of text: link:/ref/gui#gui.get_text_metrics[gui.get_text_metrics] and link:/ref/gui#gui.get_text_metrics_from_node[gui.get_text_metrics_from_node]
* Fixed a bug when trying to connect a device to the editor and the computer has multiple active network interfaces
* If the device has a specific language setting (e.g. iOS), this is returned by link:/ref/sys#sys.get_sys_info[sys.get_sys_info] under the key +device_language+
* Optimized default particle shader
* Fix for batched rendering of GUI scenes

More various fixes (Release 1.2.26)
-----------------------------------
_November 26, 2013_

1.2.26 brings more smaller fixes:

* link:/ref/builtins#pprint[pprint], which is similar to link:http://docs.python.org/2/library/pprint.html[pprint] in Python
* New playback mode for all types of animation, PLAYBACK_ONCE_PINGPONG, which animates once back and forth
* Variable frame time step, which can be enabled in link:/doc/game_project[game.project]
* The instance id returned from link:/ref/factory#factory.create[factory.create] is in global form
* Improved error handling when supplying properties to link:/ref/factory#factory.create[factory.create]
* Device identifier (device_ident) returned from link:/ref/sys#sys.get_sys_info[sys.get_sys_info] for iOS and Android
* link:/ref/sprite#animation_done[animation_done] contains the id of the animation
* Increased max message buffer size (2 kb)
* Improved logging when GUI scene nodes are used with the wrong scene

Various fixes (Release 1.2.25)
------------------------------
_November 12, 2013_

1.2.25 brings various smaller fixes:

* More accurately measured scopes in the profiler
* Update frequency (FPS) can be set at run-time through link:/ref/sys#set_update_frequency[scripts]
* Lose images in an atlas files now appear in the animation drop-down menus in e.g. sprite components
* link:/ref/sys#sys.get_sys_info[sys.get_sys_info] also returns the time zone
* Text nodes in GUI components could be rendered in the wrong order
* Various fixes in the online documentation
* Icons could not be selected in the scene view
* go.property failed to be detected when terminated with a semi-colon

Fixed Tile Bleeding (Release 1.2.24)
------------------------------------
_September 25, 2013_

We have added a property to atlas and tile source resources called _Extrude Borders_, which fixes the problem of tile bleeding.
Read more about it in the bottom of the link:/doc/tiles[2D Graphics Guide].

=== Other Fixes

* math.random() (Lua) behaves the same on all target platforms
* link:/ref/gui#gui.get_screen_position[gui.get_screen_position] did not work correctly for text nodes
* Counters for GUI nodes, animations and textures are included in the profiler

iOS 7 & More GUI Improvements (Release 1.2.23)
----------------------------------------------
_September 18, 2013_

=== Fixes

* Support for iOS 7
* Text and box nodes can be interleaved in GUI scenes, without render order problems
* The actual screen position of GUI nodes can be obtained through link:/ref/gui#gui.get_screen_position[gui.get_screen_position]
* GUI animations can be created for individual properties by specifying "position.x" instead of gui.PROP_POSITION
* GUI text nodes inherit their text alignment from the pivot, e.g. North West meaning halign LEFT and valign TOP
* Fixes for picking text nodes in the GUI editor

=== Other fixes

* Missing resources are properly logged
* Fix for compiling sub-collections with embedded game objects
* Project title and bundle-identifier from game.project is used for the iOS simulator app when signing
* Changed archive extension to .darc (from .arc)
* Absolute URL:s can be declared globally in scripts, outside of the callback-functions
* Default encoding for text files is now UTF-8
* Unaligned texture support (rows not multiple of four bytes)
* Fix for very long log messages (capped to 1024)
* More reliable discovery of local ip-address in editor
* Depth-mask is enabled before clear in default render-script (builtins)
* link:/ref/builtins#hash_to_hex[hash_to_hex] function, which returns the string representation of a hash value
* link:/ref/sys#sys.get_sys_info[sys.get_sys_info] function, which returns information about the system, such as device and language settings

GUI & Font Improvements (Release 1.2.22)
----------------------------------------
_August 12, 2013_

This release contains fixes regarding GUI components and fonts, and some other goodies.

=== Fixes

* Fonts now support utf8 encoding.
  Use the new _extra_characters_ field in a font resource to specify which additional characters you need.
* Text nodes in GUI components support automatic line breaks.
* Font rendering has been optimized a lot.
  As a result, the default font shader does not render shadows (too expensive for mobile devices), but it's possible to enable in custom shaders.
* GUI scenes are batch-rendered for higher performance.
* The animation system has been extended with the same functions as the game object animation system, which are described link:/doc/properties[here].
* GUI scripts support inclusion of lua modules through the lua "require" keyword.
  link:/doc/scripting_debugging[This guide] provides more details on how it works.
* GUI scenes have increased limits for the amounts of fonts and textures added.
* Slight optimization of rendering on iOS devices.
* Fix for the automatic discovery of mobile devices in the editor.

Pre-multiplied alpha (Release 1.2.21)
-------------------------------------
_July 7, 2013_

All textures loaded in Defold now have the color-value link:http://en.wikipedia.org/wiki/Alpha_compositing[pre-multiplied] with alpha for prettier blending.
If you have made custom shaders, you will need to update them accordingly.
There is plenty of online resources which explains pre-multiplied alpha in greater detail, e.g. link:http://home.comcast.net/~tom_forsyth/blog.wiki.html#%5B%5BPremultiplied%20alpha%5D%5D[this] and link:http://blogs.msdn.com/b/shawnhar/archive/2009/11/06/premultiplied-alpha.aspx[this].

=== Other fixes

* Crash when deleting game objects with running animations
* Crash when setting properties through go.set and specifying a value of the wrong type
* Updated the editor framework (Eclipse RCP) to a later version

Animation & getters/setters (Release 1.2.20)
--------------------------------------------
_June 3, 2013_

We are proud to release Defold 1.2.20, containing animations, getters/setters and more!

=== Animation

You can now animate gameobject-transforms, shader constants and script properties from scripts.
We made link:http://www.youtube.com/watch?v=Mptu8h-qFL8&hd=1[a demo] to show what you can achieve with it.

=== Getters/Setters

This is something that has been on the wishlist for a long time and we have finally solved it in a robust way.
See the guide for link:/doc/properties[more info].

=== URLs

The features mentioned above makes use of our URL-like concept for addressing objects.
To make it easier to understand how the URLs work, we have improved the link:/doc/message_passing[guide] about them.
We have also introduced two short-hand notations: +"."+ means the game object containing the script and +"#"+ means the script itself.
We hope this will make URLs easier to use.

=== Reference docs

The reference documentation should be more clearly categorized now.
Have a link:/ref/sys[look] and see what you think.

=== Other fixes

* The amount of projects are now 10 per user
* Better syntax-highlighting in the lua-editor
* Major improvement on build times for large repos
* msg.url correctly resolves the URLs: msg.url(nil, "instance", "sprite") is equal to msg.url("instance#sprite")

Enjoy!

Input and trigger handling (Release 1.2.19)
-------------------------------------------
_April 25, 2013_

Release 1.2.19 brings multi-touch, 360 controllers on Windows and physics trigger handling.

=== Multi-Touch

We now support multi-touch on iOS. Please see the link:/ref/go#on_input[reference docs] for how to handle multi-touch.

=== 360 Controllers on Windows

We have finally added the ability to use XBox 360 controllers on Windows.
To properly connect your 360 controller to Windows, please see the link:/doc/input[input guide].

=== Physics Triggers

We have added a new message to specifically handle entry and exit of physics triggers.
The message is called +trigger_response+, please see the link:/ref/gamesys#trigger_response[reference documentation] how to act on it.

=== Other Fixes

* New functions for inverting matrices: link:/ref/script#vmath.inv[vmath.inv] and link:/ref/script#vmath.ortho_inv[vmath.ortho_inv]
* Fixed lingering contacts after a tile map cell had been cleared at run-time

Enjoy!

ParticleFX Fixes (Release 1.2.18)
---------------------------------
_April 2, 2013_

Release 1.2.18 features ParticleFX fixes as well as some other minor fixes.

=== ParticleFX

* Particles are depth-sorted according to the transform of their emitters
* Spawned particles have individually randomized properties
* Hidden curves in the curve view can not be edited
* The context menu in the curve view is properly updated
* When clicking multiple points, only one is selected
* Fixed overflow issue on iOS for rotating particles

=== Other Fixes

* Script property declarations can have trailing comments again:
  +go.property("health", 100) -- a comment here is now ok+
* The sender parameter in the on_message-callback was not set when receiving animation_done messages from sprite components

Enjoy!

Tiny graphics update (Release 1.2.17)
-------------------------------------
_March 18, 2013_

Release 1.2.17 is out with two smaller graphics fixes:

* We now support Collada-models exported from Blender.
* Offscreen render targets can now be used on iOS devices.

In-place Game Objects (Release 1.2.16)
--------------------------------------
_March 13, 2013_

We have just released 1.2.16 which features in-place game objects, support for Windows 8 and other nice fixes.
Let's start with the game objects.

=== In-place Game Objects

We have added the feature to add game objects to collections in-place, meaning that a separate .go file is not necessary.
This makes prototyping a lot smoother.
The shortcut keys to add game objects have hence changed, we now have *I* for adding game objects in-place and *Shift+I* to add them as a reference.
Similarly adding collection references (sub collections) has been changed to *Shift+O*.

We have also exposed link:/doc/script_properties[script properties] in sub collections, so it's even easier to reuse your scripts.
This is a very powerful feature, so make sure you check it out.
To facilitate selection, you can now select different objects with the arrow-keys, similar to how Maya works.

=== Other fixes

* We now have initial beta support for Windows 8. You need to run the application in Windows 7 compatibility mode though.
* Fix for the periodic lag happening on Windows, typically when booting the game or reloading resources
* Texture problem occurring on OSX with AMD
* Looping particle systems are automatically stopped when the containing game object is deleted
* All nodes that references a file can now be double-clicked in the Outline view to open the related file
* Optimization when having plenty of kinematic collision objects

Rotating Particles (Release 1.2.15)
-----------------------------------
_February 25, 2013_

The most prominent feature in 1.2.15 is the ability for particles to rotate.
The emitters have now been extended with two new properties.
_Initial Rotation_ controls how a spawned particle will be initially rotated.
It can be animated over the lifetime of the emitter and also has support for spread, just like the other emitter properties.
The second property is _Life Rotation_, which can be animated over the lifetime of the particle.
Use the latter to make your particles spin.

=== Other Fixes

* Images added to the root of an atlas represents a one-frame animation.
  Now they are also available in the _Animation_ drop-down menus in sprites and emitter nodes.
* When starting two instances of Defold, the workspace could be corrupted resulting in warnings and the application unable to start.
  This has now been fixed.
  If you have a corrupted workspace, you can safely remove the workspace-directory inside your Defold installation and start the editor.
* Fixed editor crash when previewing a particle fx and the images used in it was deleted.
* Fixed memory leak in the Defold iOS-app, which made it crash after several restarts.
* The graphics library (jogl) used in the editor has been upgraded, hopefully providing support for more rare graphics cards and drivers.

Stay tuned for more!

Fix for Broken Resolve (Release 1.2.14)
---------------------------------------
_February 19, 2013_

Yesterday's release unfortunately brought a new error, which we are very sorry about.
When synchronizing changes which conflicted with someone else's changes, the synchronize dialog failed to resolve the situation.
The result was a failure during the Push-stage with the message "Unable to publish files".
This has now been fixed, in addition we have manually tested and verified an extensive amount of different situations which can occur when synchronizing.

=== How did this happen?

We were under pressure to get a lot done and cut corners during the deployment of yesterday's release.
The introduced error served as a healthy reminder that we can never do this again.
Our goal is for every release to be better than the previous in every regard - broken features is not ok!

To meet this goal, we have a large amount of automated tests which run each time we introduce changes.
Additionally, we have a robust procedure in place on how to deploy new releases.

The short term fix is to never stray from the deployment procedure again, no matter the pressure.
The long term fix is to rewrite the entire Synchronize-dialog, so that it can be automatically tested and ensured to stay robust.
Being able to safely synchronize changes with each other is a corner stone of Defold, which makes any error here critical.

Apologies for this, we will make better!

More Fixes (Release 1.2.13)
---------------------------
_February 18, 2013_

We have just released 1.2.13, containing more useful fixes!
Since this release was so close to 1.2.12 and the fact that the next release 1.2.14 is scheduled for this weekend, we chose to wait with the newsletter until that release.
Below are the fixes, in no specific order.

=== Fixes

* Tile source animations can be previewed on Windows/Linux without performance issues and random crashes.
* New key bindings for bring-forward/send-backward in the GUI editor to avoid collisions with building the project.
  They are now Ctrl/Cmd+[ and Ctrl/Cmd+], like Photoshop and Illustrator.
* The property view is properly resized and laid out when status messages appear in it.
* If you attempt to delete game objects from the final-callbacks in scripts, the log will show fatal error messages since this is currently unsupported.
  Deleting game objects containing collision objects this way can lead to a crash.
  This will be properly fixed at a later time.
* The move manipulator has a square handle for free X-Y movement, similar to Maya.
* Sprites and emitter nodes (within ParticleFX) has drop-down menus for easier selection of animations.
* Selected objects are visualized even when outlines are set to not be shown.
* When synchronizing own and foreign changes, the own changes was not properly pushed.
  A second synchronize command was demanded for the changes to be pushed.
* Which object types to show was previously moved to Scene > Show > Types, they have now been merged with the Scene > Show menu again.
* Sprites with horizontally or vertically flipped animations are properly visualized in the editor.
* Atlas resources are reloaded when the contained images have been changed.
* Fixed exceptions when deleting images referenced from atlases.

Enjoy!

Transforms and Script Properties (Release 1.2.12)
-------------------------------------------------
_February 13, 2013_

Another release (1.2.12) is now out with some useful additions, specifically synchronous game object transform operations and improved script properties.
Before we go into details, we would like to update you on our current situation.

We have had a fantastic opportunity to work in close collaboration with one of the mobile gaming industry's biggest studios.
We are both getting valuable insight into how they currently work, as well as important feedback regarding Defold.
The end result is that we can make sure Defold performs even better.
The drawback is that this has pushed our plans regarding the public release.
We apologize for the delays and that they are announced so late.
We hope that you can appreciate the long term benefits from this, which lead us closer to our goal of making Defold the best platform for 2D game development there is.

=== Public Release

Regarding the public release, we have yet to decide how to move forward.
At the moment, we are planning something similar to how we handled the delayed beta stage - to keep releasing features (like packaging the game for release) without charging more than we currently do.
We want to make Defold much smoother to use before we go public.
This unfortunately means that we are not ready to open the doors yet.
If you are eager to start using Defold at this stage, there are two ways to get access.
Either you post in our forums and request someone of our very friendly users to invite you, or you make a private post to us including a brief explanation of why you want to use Defold.
Now, onwards with the new features.

=== Transforms

We have extended the transform functions (link:/ref/go#go.get_position[go.get_position], link:/ref/go#go.get_world_position[go.get_world_position], link:/ref/go#go.set_position[go.set_position], etc) to take an optional argument specifying which game object it should relate to.
This means that you can now synchronously both read and write the transforms of other game objects. Here is an example:

[source-code, lua]
----
-- get the world position of game object "x"
local p = go.get_world_position("x")
----

=== Script Properties

We have extended script properties with two new features.
URLs does not need to be global, which means that you can more freely specify target game objects or components to manipulate.
There is also a browse button which lets you quickly select among the available URLs in your collection.

image::images/blog/20130213/bool_and_url_property.png["Property Editing", align="center"]

We have also added boolean as a type, which gives you neat check boxes in your game object and collection properties.

=== Improved Visualization Control

You can now select if outlines around objects and the background grid should be shown in the editor.
This applies to all views.
Moreover, you can select whether to show models and particlefx.

image::images/blog/20130213/scene_visualization.png["Scene Editor Visualization", align="center"]

=== Physics Impulses

We have found a serious issue where we scaled both the applied impulses reported from contact points as well as the global impulse limit settings twice by the physics scaling.
This means that if you use either of them in your game, you need to multiply your limits by your scale once.
We apologize for this error in calculations and have added tests to make sure we don't make the same mistake again.

=== Other fixes

* Both atlas and GUI files now support jpeg images
* Fixed bug when synchronizing an added file that someone else already added
* GUI nodes without a texture were not visible on Windows and Linux
* The default animation of a sprite was incorrectly visualized in the scene editor
* Internal optimizations

Take care!

Defold Christmas Gift: Atlas (Release 1.2.11)
---------------------------------------------
_December 20, 2012_

This will be the last release of 2012 and Defold would like to take the moment to thank you for this fantastic year.
We have grown to the cap of our user base (1000) and got a lot of attention from all kinds of places.
Though there is still lots to be done, we seem to be on the right track.
Gamedev newbies are releasing games on the App Store and the old-timers are amazed by the fast turnaround times and flexibility.
If you haven't yet had access to the service, you could ask for an invite in our forum and one of our many friendly users will probably step in and offer one.

=== Public Release

Regarding the public release, it has been post-poned to January.
We have also removed Android as a supported target device for this release, but will support it at a later time.
Defold runs well on a Nexus 7, but to put Android as a target platform we would need to test and verify a multitude of devices.
We want everything we release to have a very high quality and doing this for Android would simply mean a lot of work and resources.
Instead, we are going to focus harder on iOS and the workflow around it, as well as the general experience of using Defold.
We hope you understand and appreciate this new direction.

=== Atlas

A new feature in the engine is texture atlases.
By using an atlas, you automatically get a composite texture of all the image files you add to it.
This is very important for performance on devices and should be used as much as possible.
Read more about them in the link:http://www.defold.com/doc/tiles[guide].

=== GUI

We have improved our GUI component a bit.
Now you can select adjust mode for every node, which is a great way of dealing with different resolutions (e.g. iPhone vs iPad).
The settings are fit, zoom and stretch and works similarly to how you would adjust an image on your desktop background.
The fastest way to see how your GUI perform for different resolutions is to start the game on your computer in windowed mode and start resizing the window.
We have also extended the GUI-scripts with getters to access the different properties of the nodes, as well as functions for reordering the nodes among themselves in runtime.
Please see the link:http://www.defold.com/ref/gui[reference] for the complete list of available functions.

=== Other fixes

* When copy-pasting items in the outline that has and id, the id will be automatically adjusted to avoid a collision.
* Drag and drop in the outline is more consistent in terms of letting you know where things will end up.
* Sprite animation playback has changed for the backwards play mode.
  If you have an animation playing forwards, the only thing you should change to make it go backwards is the playback mode, not the start and end tiles.

=== Why the jump to 1.2.11?

We found a crash bug in the iOS app after 1.2.10 went live, hence the quick release of 1.2.11 which fixes that crash.

Team Defold wishes you happy, relaxing and creative holidays!

Scaling things (Release 1.2.9)
------------------------------
_December 5, 2012_

We are happy to announce that game objects and collections can now be scaled!
This is extremely useful for fast prototyping and other things.
This release also contains improved error reporting, optimizations when working with large collections and game objects as well as other fixes.
Details follow below.

=== Scaling

We have added support for uniform scaling throughout the scene graph, meaning game objects and sub-collections (which is basically a collection inside another collection).
By restricting scaling to uniform only, we can automatically scale all physics primitives and the calculations becomes faster.
We will later add support for non-uniform scaling specifically for the components that need it, such as sprites.
You can also scale the game objects from scripts by using the new function link:/ref/go#go.set_scale[go.set_scale].
Please note that physics is not currently updated when using that function (we plan to add this later since it's less common).

=== Improved Error Reporting and Optimized Editing

If you get any errors when building your project, these are now shown in the Project Explorer.
The files and folders which contains them now get overlayed error icons.

image::images/blog/20121205/project_explorer.png["Error Reporting", align="center"]

Remember that you can still double click on the errors in the Problems View to jump straight to the files.

We are still validating the files when you edit them, but have removed the feature of displaying errors actually located elsewhere.
An example of this is the message saying that a file contains errors when you add that file as a reference to another object.
This feature was very expensive and lowered the responsiveness of the editor, especially when working with large collections or game objects.
That feature should be covered by the new error reporting in the Project Explorer though.

=== Frozen Auto-update

The progress bar when updating Defold to a new release was not correctly updated, on Windows this could result in the OS reporting Defold as having frozen.
Please note that this fix is part of 1.2.9 so it takes effect first when you update to 1.2.10.
If you experience this problem, please remove the Defold installation and download it again, just don't forget to Synchronize your files before you do.

=== Other Fixes

* When painting tiles in a tile map far down to the left (negative coordinates), the tile map would not load in the game.
* Sound gain is now clamped to 0-1.
* Playback-problems with some sounds on iOS, like short sounds being repeated.

Tile map rendering and better sound control (Release 1.2.8)
-----------------------------------------------------------
_November 26, 2012_

In this release, we bring you custom rendered tile maps, improved sound control and lots of other fixes.
We have also reached the cap of registered users once again, so please be patient if you have registered but haven't got the invitation mail.
We will let you in in time.
We have also heard that some mail providers filter these mails as spam, so please check your spam if you haven't received it.

=== Custom Rendered Tile Maps

Tile maps can now be rendered with a custom material and blend mode, just like Sprites and ParticleFX.
These settings are available in the tile map properties.
You can also set shader constants in runtime through link:/ref/gamesys#tilemap.set_constant[tilemap.set_constant].

=== Better Sound Control

We have now added the ability to set the gain of sounds from scripts, by sending link:/ref/gamesys#set_gain[set_gain] to the sound component in question.

=== Other Fixes

* Components referenced from files (like tile maps and ParticleFX) can now be moved and rotated inside game objects
* The contents of visually edited files is automatically framed when such a file is opened
* Copy/pasting sprites made the new sprites invisible
* ParticleFX editor has a tip on how to use it that appears when such files are opened
* Particles were not correctly flipped according to tile source animation settings
* In some cases, files were incorrectly flagged as being built when they contained errors
* Opening other file types after having worked with ParticleFX files could yield exceptions
* Tile sources can be reloaded (problem with file extension)
* The impulse in contact_point_response messages was incorrectly scaled
* You can now set an impulse limit in game.project, which makes contact_point_response messages be ignored when their impulse go below that limit
* Corrupted sounds fixed when rebooting the running game
* Modifiers of emitters that emits in world space are also in world space
* Connecting devices with the editor (Project > Target) is even more stable
* Optimized web profiler, access http://<ip>:8002 to use it (replace <ip> with the IP of your device)
* Random crash when creating game objects with an empty set of script properties
* Error dialog if you try to start two instances of the same editor installation
* Error message when posting messages to instances that have been deleted
* Files and directories can contain spaces
* Collection proxies handled messages posted in the final-function incorrectly
* Sounds from the same source file were treated as equal when controlled through messages. Now only the addressed sound is controlled.
* ParticleFX could run out of rendering resources, resulting in assert

Particle Editor and iOS Improvements (Release 1.2.7)
----------------------------------------------------
_November 6, 2012_

This release is the largest release we have made so far, it even outweighs the alpha (1.0).
Below are the changes listed in order of importance.

=== Particle Editor

We have completely revamped our particle system and made a new editor to go with it.
We are really happy with how it came out and want to thank all the great VFX designers who provided feedback during the development.
Check out the video below and see the new link:/doc/particlefx[guide] for more info.

link:/youtube_embed/qzyB1lXNDKQ["Defold Particle FX"]

=== Mipmaps and Image Sizes

We have enabled link:http://en.wikipedia.org/wiki/Mipmap[mipmaps] for prettier graphics.
iOS devices require the width and height of mipmapped textures to be link:http://en.wikipedia.org/wiki/Power_of_two[Power-Of-Two], so all images are currently automatically scaled to the closest POT.
If your images appear blurry after this release, you can make them crisp again by padding your images to the closest POT above the current width and height.
Reasonable POTs are: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 and 2048.

=== iOS Improvements

We have added support for iOS 6 (we now support 4.3 and up).
The orientation of the game (portrait or landscape) is automatically selected based on the specified resolution (see the link:/doc/game_project[reference]).
The editor now locates devices faster and in a more stable manner.
When starting the game on your device, the load times have been heavily reduced by using a cache (which means that the first time might be slower since nothing is cached).
We now also support the retina display and have improved life-cycle support.

=== Sound Component

There is now a proper sound component, which you can add to your game objects to play sounds and specify if they should loop or not.
We have also added support for OGG files on top of the WAV support.

=== Camera Navigation

We have unified the camera navigation to work the same in the Scene, Tile Source, Tile Map, Particle and Curve editors.
The navigation is still Maya-style with the addition of using the scroll-wheel to zoom.

=== Customizable FPS

Games in Defold runs at 60 FPS by default, this can now be configured in the game.project file (see the link:/doc/game_project[reference] for more info).

=== Open browser from inside the game

There is a now a function called link:/ref/script#sys.open_url[sys.open_url(url)] which lets you open a URL in a browser (according to end-user settings) from inside your game.

=== Other Fixes

* Scene editor is more responsive while box-selecting
* Full support for OSX Mountain Lion (issue with signing apps)
* Erroneous statuses of nodes in the Outline view could randomly cease to work
* Multi-selecting sub-collections and game objects in a collection caused exceptions to occur
** Similar issue when bringing up the context menu for multiple selected nodes, which would make the editor freeze
* Larger limit for the resource streamer so that 2048x1024 can be streamed to the game
* Synchronize-messages could not contain quotes ("") (Windows-specific)
* Selections made in the Scene Editor were not properly updated when undone (mostly related to enabled commands etc)
* For some tile sources, adding a collision image would make the tiles cease to be rendered
* Game objects containing tile maps could not be copy-pasted

Fixed immediate game termination (Release 1.2.6)
------------------------------------------------
_October 19, 2012_

In this release we have fixed a critical bug that occurred for some users with specific network setups.
The engine would terminate immediately when launching the game.
The reason was that we retrieve the hostname at startup for connecting other devices to the editor, in some cases that code would fail and terminate the engine silently.
We have now added fallbacks and logging to enable the engine to start even when this fails.

=== Optimized Tile Map Rendering

Tile maps are now faster to render by the use of batches and pre-calculated UV sets.
If you had plenty of tile maps and your game ran slow, you should hopefully see a much better performance now.

=== Selection as an Operation

Selecting objects in the Scene Editor is now handled as a proper operation, which means it can be undone and redone.
This has been a long requested feature and should make the workflow a bit more convenient, especially when accidentally deselecting things.

=== Fixes

* The move and rotate manipulators used incorrect transforms when manipulating children of rotated parents.
* Different bugs regarding interacting with manipulators, the camera and selections.
  We have now cleaned up the handling of these things and it should be more stable now.
* Collision filters were not updated when posting set_tile to tile maps

=== In Progress: Geometry Wars!

We are currently working on the new particle system, which will be released in 1.2.7 (approx. 2 more weeks).
We are also working on a graphics demo to showcase the visual capabilities of Defold.
It is heavily influenced by Geometry Wars 2 Retro Evolved made by Bizarre Creations (amazing game!).
It means heavy use of particles, custom render pipe and post fx (glow and compositing).
The plan is to use that demo in a series of articles explaining things like visual FX and AI, to come later.

That's all for this time, stay tuned for 1.2.7!

Improved Sprite Rendering (Release 1.2.5)
-----------------------------------------
_September 21, 2012_

This release features improved sprite rendering, preparations for the brand new particle system and a few minor fixes.

=== Sprite Rendering

Sprites have now been extended with blend mode and custom shading.
Blend mode lets you choose how the graphics of a sprite should be blended with the graphics behind the sprite.
Custom shading is achieved by specifying a custom material + shaders in the sprite properties.
We have extended the link:/doc/tiles[Tiles guide] with information about this in the Sprite-section.

=== Particle System

We have had a particle system in place for a long time (2 years) in Defold, accessible through Emitter components.
This system had many drawbacks and was poorly designed, which is why we are completely redesigning it now.
As a preparation for this, we have deprecated the .emitter files.
If you are using them in your project, they will now not be rendered (with a warning in the Console-view when loading the game) and show up as text-files if you try to edit them.
Please let us know if you use them and we will help you convert to the new system.
We would in fact be very impressed if anyone has get the Emitters to work, due to the lack of documentation and complex editing.

The new component type is called _ParticleFX_, we will provide better documentation when it's ready for release.
We are very excited about the new system, we are getting great feedback and advice from very talented effects artists and designers in the games and CGI industry.

=== Fixes

* Added support for textures with 16-bit color depth
* The outlines of the icons used for visual-less components were offset incorrectly
* When browsing for files in the game.project editor, the necessary 'c' was not appended to the filenames

=== Known Issues

* Engine crashes (OpenGL error) when shaders (both fragment and vertex) are hot reloaded
* Reloading a material with modified shader paths does not update the shaders

Hope you enjoy the release and stay tuned for more improved visuals!

Brand New Platformer Article and Release 1.2.4
----------------------------------------------
_September 7, 2012_

This release features an article about platformer physics and a more open registration process.
We also made some minor but sweet fixes.

=== Platformer Article

The article can be found link:/doc/platformer[here].
We explain how you can make a classic 2D platformer using a physics engine for collision detection.
Please share it to anyone interested.

=== Registration

We have opened up the registration process a bit more by allowing anyone to register.
What actually happens is that there is now a cap on the total amount of registered users.
Until the cap has been reached, anyone signing up will be automatically invited to Defold.
Anyone with an invitation is guaranteed a spot.
When the cap has been reached, anyone registering will be put into the Beta queue as usual.
You can register link:/signup[here].

=== Fixes

* When moving objects in the scene editor, you can make the manipulator snap to the grid by holding down *Shift*
* The +game.project+ file now has a proper editor so you don't need to fiddle with the text format anymore
* The editor starts with a splash-screen on Windows and Linux (this always worked on Mac)
* When resizing the Scene Editor, the camera zoom is retained (it was reset before)
* There is a new Settings-category in the link:/dashboard/[Dashboard] where you can decide if you want to receive the newsletters

Hope you enjoy this release!

Release 1.2.3
-------------
_August 30, 2012_

This release contains billing, sprite-flipping in runtime, enabling/disabling GUI nodes, recursive module loading and optimized sprite rendering.

=== Billing

We are now officially charging for Defold if you work in a team.
If you work alone, you can still use it for free.
See the link:/plans[plans]-page for details on how we are charging.
We welcome all feedback regarding our pricing strategy in the link:http://defold.userecho.com[forums].

[IMPORTANT]
====
If you joined us during the Alpha stage, you will receive a coupon code for 2 months of free access to the Small plan. Info about this will arrive in a separate email, so keep your eyes open for that.
====

=== Sprite-flipping

Sprites can now be flipped in runtime with the functions link:/ref/gamesys#sprite.set_hflip[+sprite.set_hflip+] and link:/ref/gamesys#sprite.set_vflip[+sprite.set_vflip+].

=== Enabling/disabling GUI nodes

Individual GUI nodes can now be enabled/disabled through link:/ref/gui#gui.set_enabled[+gui.set_enabled+].
Disabled GUI nodes are neither rendered nor animated.
To hide a node, disabling it is a much better option performance-wise than setting its alpha to zero or moving it off-screen.

=== Recursive module loading

In 1.2.2, we introduced the ability to include link:/doc/scripting_debugging[lua modules] in scripts using +require+.
Now you can include lua modules in other lua modules, which makes this feature even more powerful.

=== Optimized sprite rendering

We have optimized the rendering of sprites, which appeared to be a bottleneck on the iOS platform.
The rendering is now batched for fewer draw-calls, but this should not have any impact in the appearance of your games.

Hope you enjoy this release!

Release 1.2.2
-------------
_August 17, 2012_

This release features the ability to reuse scripts in other scripts, increased sound control and using hashes as keys in Lua tables.
It also contains many smaller fixes.

=== Re-using Scripts

You can now make Lua Modules (.lua-files) which can be included into logic scripts (.script-files).
By putting functions into the Lua Modules, you can call them from other scripts.
This is a very basic feature in most programming languages and we are happy to finally add it to our scripts.
Read more in the link:/doc/scripting_debugging[Scripting & Debugging Guide] about how to use this feature.

=== Sound Control

When playing sounds with the link:/ref/gamesys#play_sound[play_sound-message], you can now control the gain (volume) of the sounds.
There is also a new message called link:/ref/gamesys#stop_sound[stop_sound] that stops all the sound voices currently playing in a sound component.

=== Hashes as Keys

This has been a long requested feature from the more advanced scripters.
By using hashes as keys in lua tables, you can make link:http://en.wikipedia.org/wiki/Dispatch_table[dispatch tables] that makes the code a bit easier to read and faster to run than hashing at run-time.
Examples of this will come at a later time, until then you can always request support in the forums.

=== Fixes

* It is not possible to launch the game on iOS when the App is from a previous version (you need to sign and re-install the App again)
* GUI scenes can have a custom background color for easier previewing (found in the properties of the scene)
* Physics memory was very over-consumed when loading levels with tile maps, which also made the load-times much longer
* Fixed error when opening collections referencing game objects with empty paths (happens when a game object file has been deleted)
* Error logs from the editor are sent to our servers so we can catch unreported errors
* Fixed log errors in the form "Unable to locate …" when files are deleted
* Better error handling when App signing fails
* Components without a visual representation (e.g. factories) are visualized by icons in the Scene Editor
* Vectors can be constructed from a scalar, which fills the vector with that value, i.e. vmath.vector3(1) == vmath.vector3(1, 1, 1)
* When box selecting in the Tile Editor, the cursor changes to a cross
* When message passing fails, the errors are more descriptive, e.g. saying who sent the failing message
* You can now build and launch the game with Ctrl+B (Cmd+B), however Ctrl+T (Cmd+T) still works
* Cleaned console logs when launching the game
* Grid size can be manually set in *File > Preferences > Defold > Scene Editor > Grid*
* Undoing rotations in the Scene Editor correctly updates properties

Enjoy!

Release 1.2.1
-------------
_August 3, 2012_

This release contains more documentation, crash-fixes and a few other fixes.

=== Documentation

We know our documentation is lacking.
We are now trying to improve it by looking at what people ask about in the forums.
There is now a new link:/doc/input[input guide] that describes how to bind and handle input in Defold.
The link:/doc/tiles[tiles guide] has also been improved to cover more areas.
How to install the Defold App on your iOS device has also been clarified a bit in the link:/doc/ios[iOS guide].

There are still missing pieces in the documentation, please help us by link:http://defold.userecho.com[reporting] what you can't find.

=== Crashes

* The app crashed when sending particular kinds of messages
* The game would crash on Windows when closing it with the close button

=== Other Fixes

* *New Folder* was not accessible in the project root or in the *File > New* menu (same with Gui, Gui Script and Script wizards)
* Multiple collision spheres in a collision object were not rendered correctly in the Collection Editor
* The tile eraser in the Tile Map editor can now be activated in the *Tile Map* menu or by pushing *Backspace*

Hope you like the fixes!

We have reached Beta! (1.2.0)
-----------------------------
_July 30, 2012_

After many days and nights of hard work, we have finally reached our Beta stage.
If you have been here before, we hope you like our new visual style!
There's also a new presentation video about our service on the link:/[front page] for those of you who are new here.

=== iOS Support

You can now run your games on your iOS devices through the editor.
Currently, one person in your team must run OS X in order to sign the app for the others.
The idea is to provide this as a part of the service in the future, so that anyone can do the signing from any OS.
We put together a new link:/doc/ios[guide] about this, which also contains a video describing how it works.

=== Documentation

Apart from the new iOS guide, we also wrote a guide about how the link:/doc/scene_editing[scene editing] works.
There's also a new search field in the upper right of the site, so hopefully you will find what you're looking for much faster.

As a part of this documentation effort, we have introduced tips in the editor.

image::images/blog/20120730/tips.png["Editor Tips", align="center"]

They appear as a top bar when you open a file and contains some basic tips how to edit the file.
We hope they will speed up the learning curve for newcomers.
If you know what you are doing already, you can manually close a tip to make sure it never appears again.

=== Comments on the Site

We have integrated link:http://disqus.com/[Disqus] to enable comments on parts of the site, like these blog entries.
So please share your thoughts below.
Other parts you can comment on are the user guides, tutorials and samples.

=== Still Free Service

Accepting credit card payments online turned out to be a bigger hassle here in Sweden than we thought.
We are still trying to get all involved parties to work nicely together.
The new link:/plans[plans page] describes how we will charge in the future, after the Beta.
We hope no one will be disappointed about not having to pay yet. :-)

=== Other Fixes

* Crash when sounds are playing while rebooting the engine
* Crash when re-parenting multiple child game objects and then deleting them
* The editor leaked resources which eventually made it crash, especially on Windows
* The automatic update of the editor timed out during the install on unstable internet connections, we increased the timeout limits to make it more robust

=== Known Issue: Creating new branches of "larger" projects

We have seen some failures when creating new branches of some projects.
We have not yet completely found out why and when these problems occur.
What happens is that a connection is lost while the repository is being cloned on the server, which makes the operation fail.
We are still testing different approaches to fix this.
Please let us know in the link:http://defold.userecho.com[forums] if you experience this.

=== Known Issue: Windows 8 not supported

We learned that our editor does not work well with Windows 8.
The editor starts but lacks most of the functionality.
We will provide better information about system requirements as soon as we have solved the more critical issues.
When we will support Windows 8 is still not decided.

We really hope you like this update!

Release 1.1.12
--------------
_July 9, 2012_

Release 1.1.12 is also a tiny update feature-wise.
It contains a few crash fixes detailed below.
It also contains parts of the up-coming Beta-release, which we wanted to deploy to be able to test it better.
These features are however not yet visible and will be exposed with the rest of the features for the Beta.

We are still working hard on the three big changes for the Beta, which are the iOS-support, the billing system and the web site redesign.
This is also the reason why the releases are more scarce now.
Things are starting to look really good though!

=== Crashes fixed

* Having a second tile map layer that had a larger extent than the first layer.
* Supplying +nil+ as properties to +factory.create+.
* Reloading a script containing properties twice.

Release 1.1.11
--------------
_June 19, 2012_

Release 1.1.11 is microscopic, since it solely contains a small fix that was critical for one of the projects.
In link:/doc/game_project[game.project], there is now a new setting under the category +[factory]+ called +max_count+ which determines how many factories can be created at once.
The default count was set to 64, this is now raised to 128.

Release: 1.1.10
---------------
_June 4, 2012_

Release 1.1.10 features tile flipping for animations, improved performance in the editor and various other fixes.
We would like to thank everyone reporting issues in the link:http://defold.userecho.com[forums], we really appreciate it!
Nearly all of the fixes in this release come from your posts. :)

=== Tile Flipping for Animations

For animations in tile sources, we have added two check-boxes called _Flip Horizontally_ and _Flip Vertically_.
This solves the problem of re-using tiles for different animations.
E.g. if you have a walk cycle where the character faces left, you can now instantly create one where the character faces right by using _Flip Horizontally_.

=== Improved Editor Performance

We noticed severe performance issues when loading and rendering larger collections.
The biggest reason for this is that we do not yet have a resource management system in place, which re-use the loaded resources from disk.
We have partially fixed this now for images and textures, which were the biggest culprits.
We are very concerned about the performance, so please report in the link:http://defold.userecho.com[forums] whenever something feels unresponsive or taking too long.

=== Fixes

* The tile brush now has a visual border, which makes it easier to see how big the tile brush is
* The zoom range in the Tile Map Editor has been increased to make it easier to work with larger maps
* We have added more settings in game.project (see link:/doc/game_project[Project Settings] for details):
** [physics] max_collisions/max_contacts, which control how many collisions/contacts will be reported to scripts
** [resource] max_resources, which controls how many resources can be loaded in the engine at the same time
** [collection_proxy] max_count, which controls how many collection proxies can be loaded at the same time

=== Fixed Bugs

* Engine crashed when loading more resources than the max limit (it's now explained in the log)
* Engine crashed when creating URLs outside the callback-functions in gui-scripts
* The check for how many projects each person can own (5) incorrectly included the projects the person was just a member of
* When having a dynamic collision object, it would set the Z-coordinate of the game object to 0 (now it remains as specified)
* Game objects in collections sometimes got component icons (like script icons)
* All layers except the first in a tile map was rendered white instead of textured
* Rendering problems for rectangular tiles in the editor, not all tiles were visible
* +vmath.matrix4_look_at+ was called +vmath.matrix4_lookat+ in the reference
* Undo/redo did not work properly when painting tiles and selecting different layers

Release: 1.1.9
--------------
_May 30, 2012_

Release 1.1.9 features a few important bug fixes.
Regarding the Beta launch, we expect to reach it in a few more weeks.

=== Fixes

* Engine crashed on Windows when starting up due to missing gl-functions (e.g. glGenRenderbuffers) on some GFX-drivers.
  We have made the graphics code more flexible to account for more variations of OpenGL-support in the GFX-drivers.
  This should hopefully fix the problem, but we have not been able to verify it completely since we lack the hardware to do so.
  Please let us know in the link:http://defold.userecho.com[forums] if it still happens.
* The overlaid tile source palette when editing tile maps did not fit if the image was too large.
  It is now scaled down to match the editor.
* Script properties was sometimes reset when the edit field lost focus.
* Collision responses involving non-dynamic collision objects carried incorrect mass.

Release: 1.1.8
--------------
_May 18, 2012_

Release 1.1.8 features a better reset functionality for Script Properties and picking in tile maps.

=== Script Properties Reset

When you have defined a property in a script, that property can be overridden when the script is used in game objects and collections.
To reset a property back to a default value in either a game object or collection, you would previously have to clear the field and hit enter.
Now we have instead visualized an overridden property by coloring the background of the field light blue and turned the property label into a hyperlink.
By clicking the hyper-link, the value is reset to the default.

The following Lua script declares a property called +health+.

[source-code, lua]
----
go.property("health", 100)
----

In a game object, the property is exposed:

image::images/blog/20120518/properties.png["Script Properties", align="center"]

We realize using a hyper-link is not a very intuitive solution, but it was simple to implement so we hope it will be good enough for now.
Script Properties are further explained in the link:/doc/script_properties[user guide].

=== Picking Tiles

When painting tiles in a tile map, you very often have to bring up the tile source to select new tile to paint with.
We have now added the ability to select tiles directly from the tile map to use when painting.
This is done by right-clicking (shift-clicking if you are using the one-button mouse setup).
You can hold and drag while right-clicking to select an entire area from the tile map to paint with.

image::images/blog/20120518/brush_select.png["Tile Picking", align="center"]

=== New Project

There has been some confusion about how to create a new project in Defold.
Note that this is still only available from the dashboard in the web site.
To make matters worse, we had a remaining menu option in the editor at *New > Project...* that did not work.
We have now removed that option entirely, which we hope will cause less confusion.
It will of course be possible to create a new project straight from the editor in the future.

==== Build/Deploy Changes

We have talked before about improving our build and deploy setup.
Now we have merged parts of our code base into a single repository, which simplifies branching a lot.
Branching lets us develop new bigger features without disrupting our short release cycle.
Big features sometimes cause unexpected delays, when they turn out to be harder to get right than we initially thought.
By implementing such a feature on a separate branch, we can still support the service and update it frequently.

We have also improved our deploy scripts to make it easier to deploy to different servers in the future.
The new setup also shortens the release cycle which is important since time is a very important factor for us at the moment.

=== iOS

We have also completed more parts of what's left to make the iOS work-flow a reality.
It will definitely be a very cool thing indeed to work immediately on an iPhone or iPad.
But more about that later.

=== Visual Redesign

We have been working with a graphics designer to update our visuals for the Beta-launch.
So far we have got a new logo that we are happy with and a new layout for the web site.

Release: 1.1.6 & 1.1.7
----------------------
_May 8, 2012_

Release 1.1.7 contains a small documentation fix that didn't make it to 1.1.6.

Release 1.1.6 features Script Properties, improved auto-completion when scripting, fixed auto-update on Windows and login through Yahoo.
We apologize that this release took longer than expected.
Remember to voice your opinions in the link:http://defold.userecho.com[Forums], all feedback is more than welcome.

=== Script Properties

We have now implemented a first version of the Script Properties.
You can now declare properties inside your scripts and have them automatically appear in the Properties View when they are used in game objects and collections.
More info on how to use them is available in the new link:/doc/script_properties[Script Properties] user guide.

[IMPORTANT]
====
If you currently create game objects through a factory and pass custom properties to the created game object, you have to declare those properties in the script for it to work. See the link:/doc/script_properties[user guide] for more info on this.
====

=== Improved Auto-Completion

Auto-completion for scripts brings up a list inside the script of the available functions and messages.
You trigger it with Ctrl+Space (Cmd+Space for Mac users).
This is a really handy way to see what's available, as it also contains documentation and examples.
The standard Lua functions are not yet included.

=== Auto-Update on Windows

This is only relevant for Windows users who currently have the Defold Editor installed.

We have finally managed to get the automatic updating of the Defold Editor to work on Windows.
This means that the version you currently have installed still contains the error and needs to be removed.
Follow these steps:

. Open the editor
. Select "No" when asked about updating to 1.1.6
. Open each of your projects and make sure they are synced (File > Synchronize), the Changed Files View should be empty for each opened project
. Remove the editor from your computer
. Download a new one from the link:/dashboard[Dashboard]

=== Yahoo

We have added the ability to login with Yahoo-accounts.
If you want us to add more providers, let us know in the link:http://defold.userecho.com[Forums].

=== Other Fixes

* The function msg.url() with no arguments now creates an empty URL which can't be used for message passing
* Fonts were not properly rebuilt when TTF-files were updated
* Drop-down lists for fonts and textures in the Gui Editor
* Wizards for creating new files are easier to use
* Optimizations for editing in the Properties View
* The rendering supports camera components
* Ray-casting against tile maps could cause the engine to crash

=== Known Bugs

* The editor is slow when editing collections with much content

=== Script Properties

The Script Properties feature proved to be much harder to implement the way we wanted it to work.
The current implementation is crude and limited in functionality, but we still hope it will simplify your work.
This feature was the biggest reason for the delayed release.
Even though we had planned it thoroughly, there were many unknowns that popped up in the implementation stage.
We have been discussing different approaches to counter these things in the future.

==== Prototyping

Start by implementing a prototype for the sole purpose of understanding the problem better.
This would be followed by design, planning and implementation.

==== Branching

We currently only use one branch for each repository in our code base.
By branching features like these, we can still provide a frequent update cycle when a feature takes more time than expected.

=== Windows Auto-Update Problem

The Defold Editor is based on the Eclipse RCP framework.
The provisioning platform, which handles updating of the application, is called p2.
To simplify the installation process we also bundle Java inside the editor, specifically the JRE.
These files are used when running the editor, which are then locked on Windows.
The problem was that p2 tried to uninstall these files while they were locked, failed and left the editor in a very confused state.
This is a link:https://bugs.eclipse.org/bugs/show_bug.cgi?id=300812[known bug] in p2.
To solve it we have instead manually attached the JRE to the zip, so p2 leaves it alone when updating.
The drawback is that we then lose the ability to update the JRE automatically.
As that's something we plan to do very rarely, it's a drawback we can accept.

=== Slow Editor

We currently haven't implemented a resource management system for the editor yet.
Such a system makes sure that resources, like textures, are reused instead of being loaded over and over and duplicated in the memory.
This is one of the reasons why the editor is so slow when using many resources (like in a big collection).

It can also become slower and consume more memory when you have many visual files opened.
We haven't investigated this yet, but we suspect there are memory leaks involved in the current resource handling.

Editing files can also be slow when many files are opened.
One of the reasons for this is that we do a lot of state checking to keep the status up to date for the different files, like tracking errors etc.

We'd just like you to know for now that this is of great concern to us and we long to start improving these things.
If this is of great concern to you too, please let us know in the link:http://defold.userecho.com[forums] so we can adjust the priorities.

Release: 1.1.5
--------------
_April 16, 2012_

This release contains more important bug fixes, it feels like we now have gotten the worst ones out of the way.
This means that we can pay more attention to the reported issues and the design of the bigger features for the beta release.

=== Synchronization Problems for Mac OSX 10.6

We had bundled git (which we use for syncing and sharing projects) from a build which was incompatible with OSX 10.6.
This has now been fixed.
We have not yet had time to make proper hardware/OS requirements for the service, nor do we have a lot of different machines to test on.
This of course makes problems like these more likely to happen, but we hope you can accept this for the time being as we are currently running on minimal funding.
Once we reach further, we can also provide a better test bed.

=== Mouse Setups for Scene Navigation

This is actually a new feature, which should be interesting if you run Defold on a laptop with Windows or Linux.
To navigate in the Scene Editor (for visual placement), we used two separate styles similar to Maya based on if you run Mac or not.
The non-Mac setup assumes you have a three-button mouse and relies on the middle-button for panning.
This is now changed to be a preference (*File > Preferences > Defold > Scene Editor > Mouse Type*), which you can set if you want to use the one-button style.

=== More Fixes

* There were different problems with deleted files not being marked correctly
* Some remaining problems with using index-colored images in tile sources (actually when they were used in tile maps)
* Errors in components inside game objects (like collision objects) were not properly detected when building
* Deleting non-existing game objects from scripts made the engine crash
* Invalid tile sets (as marked in the editor) were not caught by the pipeline and made the engine crash
* The drop-downs used for some data-files (like input bindings) are now larger when expanded
* A jaw-dropping About-dialog (*Help > About Defold*)

We are also happy to see the discussions taking place in our link:https://docs.google.com/document/d/18u_9Jhuuj-NEHCVKTH7gj127Hs62fT1KKwecRRbkz44/edit[design document] for script properties.
Thanks to everyone participating, know that you are shaping Defold into a better game dev environment! :)

Script Properties Design
------------------------
_April 15, 2012_

We have started designing how the script properties should work.
Now we want you to join in and criticize our decisions, so we can make even better ones.
The document is right link:https://docs.google.com/document/d/18u_9Jhuuj-NEHCVKTH7gj127Hs62fT1KKwecRRbkz44/edit[here], anybody can comment.

We are very excited to see how this works out.
Hopefully we can do this (or something better) for all upcoming features.
Transparency and knowledge sharing ftw!

/Team Defold

Beta Plans
----------
_April 12, 2012_

We have now gone through everything we want in place for the Beta release due June.
In general, we will focus more on bugs and annoyances than new features.
We value the feedback you provide and are open to change our plans, should anything come up.
Our planning is very dynamic so expect anything to change.

Some new features are too important to postpone.
We are excited to test a new experimental approach to designing these.
During the years, we have worked out a pretty robust way of designing, implementing and testing new features.
This time we want to try involving you in the initial design, to collect feedback as early as possible.
How this will happen exactly is not yet clear, but probably something like a publicly accessible Google doc where you can add comments.
Let's see how it turns out! :)

=== Script Properties

For game objects that use the same logic script, it is common that you want their behaviors to differ slightly from each other.
This feature is the ability to tweak scripts with different initial values to basically reuse the logic for different configurations.
A practical example would be an enemy that has twice the health of another, but the same general behavior.

=== iOS

We are working on a smooth work-flow of testing the game on an iOS device.
This would have the same features as when running it on your local machine, like hot-reloading and profiling.
It obviously includes full touch support in the input system.

=== Auto-Completion and Tags

Some properties rely on the user to specify the exact same IDs in different places.
This is error-prone and we are looking at different ways to support auto-completion and tags, commonly found in web interfaces.
A related feature is improved auto-completion when scripting.

=== Improved Tile Map Editing

The current painting of tiles is very rudimentary and would benefit from more features, like copy-paste and the ability to move painted tiles.

There are of course a ton of bugs to fix as well, so we have plenty to do this spring!

/Team Defold

Release 1.1.4
-------------
_April 11, 2012_

We have just released another batch of bug fixes.
Thanks to all you wonderful game devs who give us feedback in the link:http://defold.userecho.com/[forums]!
We really hope you feel it pays off to do this, as we try to attend to everything as quickly as possible.
Don't forget to use your votes if you think we are fixing the wrong things!

=== Automatic Update Failing on Windows

There is an issue with the automatic update of the Defold Editor on Windows.
The symptom is that a new release is discovered and installed, but the application is not restarted.
At every successive boot of the application, the new release will again be detected, but not installed.

A workaround to this is to simply remove the installation and download the editor again.
Just don't forget to *sync your files* before you do this as your changes would otherwise be deleted.
Sorry for the inconvenience, we are working on finding the cause.

=== Fixed Bugs

* Cycles in the scene graph were not detected
* Some component types (e.g. sound) could not be added to game objects as files
* Images with indexed colors could not be used as textures and tile sources
* Crash on Windows when debug-printing vmath types (e.g. vector3)
* Crash for certain setups of tile map layers
* Rotated tile maps had incorrect broad-phase AABBs when used for collisions
* More minor documentation bugs

We will have a planning session tonight to outline what should go into the beta.
The results will be posted here tomorrow, so stay tuned!

/Team Defold

Release 1.1.3
-------------
_April 4, 2012_

=== Failing Invitations & Safari

If you have received an invitation mail and you use Safari, the provided link will probably have taken you to the front page of the site.
You can still register by going to the Dashboard in the upper right.
Login through Google and supply the key when requested.
The key is the part of the invitation link after +login:+, e.g. +abcd+ if the link was +http://defold.com/#login:abcd+.
We have added instructions about this in the invitation mails.
This is a temporary work-around until we have fixed the colon-problem in the links.

=== Issues

We are really happy to see *Fredrik Z* igniting the link:http://defold.userecho.com/[feedback-section] with life!
We really hope the rest of you will start to report your issues there too.
No issue is too small to be reported.
No question is too stupid to be asked.

Bugs fixed in this release are:

* Errors when opening a project for the first time
* Incorrect type (number instead of hash) for collision groups in reference docs
* Out-dated instructions in the link:/doc/side_scroller[Side-Scroller Tutorial]
* The bonus star was not displayed correctly in the tutorial after setting _Default Animation_

The Windows-firewall problem described in the last post could not be reproduced.
Please report this if it ever happens again.

Our DNS host FSData says the connection problems a few days ago should be completely fixed now.
Since we are still very unsatisfied with how they handled the situation, we are looking for a new host now.
It will probably be a few months before we make the switch, please let us know about any connection problems you might experience.

We hope you like our updates so far. Let us know how we could improve if not!

/Team Defold

Release 1.1.2: Another Important Fix & Connection Problems
----------------------------------------------------------
_April 2, 2012_

Another bug made any new user since the alpha release and until 18:44 CET today have an editor with incorrect default preferences.
This would manifest itself as the game failing to start.
This was fixed in release 1.1.2.
Anyone who downloaded the editor after 18:44 CET (or upgraded the editor when it starts up) won't be affected.

We have also experienced lots of random problems from our DNS provider.
These problems, which caused none of our servers to be reachable, manifested themselves in many different ways.
Examples are the web site not being reachable, failures to create new projects and branches, etc.
One thing they all had in common was that they would go away after a minute or two.

A few new bugs was also found when testing:

* Opening a project from a clean installation of the editor will result in an error message (only on Mac):
  "GET http://cr.defold.se:9998/users/ returned a response status of 405".
  This only happens once and a workaround is to hit *Cancel* and reconnect. We will start to fix this soon.
* When creating a branch in the editor on Windows, a Windows firewall might kick in and make the branch creation fail.
  A workaround (until we raise the timeout) is to just try again after you give Defold.exe permissions to connect.

As we are working out how to best communicate the status of our service, please follow us on twitter: link:http://twitter.com/DefoldEngine[@DefoldEngine].
For the time being, we will post everything there as it happens.

=== More info about the issues

The first preference bug would make the editor start the game against our server instead of your local machine.
We previously had a service where you would keep your files on our server, but work with them and test them like they were on your local machine.
(A copy of your files are always kept on our servers, this just concerned which ones you would work on).
We disabled this service because of security issues before releasing the alpha version.
The reason we didn't detect the bug was that we only tested previous editor installations with different stored preferences than the default ones.
This made us happily connect to our local machines each time we tested a newer editor.
From now on, we will test clean installations on all platforms (Mac/Win/Linux) before making new releases.
We agree this seems very obvious in hindsight. It also helped us spot the bugs mentioned above. :)

The DNS instability was resolved by our provider (FS-data) after 10 hours and was very poorly handled by them.
We were in contact with them several times during the day by mail and phone, without ever given answers to any of our questions.
We take up-time and system stability very seriously.
We believe that as a service provider (like ourselves), you should try your utmost detect your errors before your users do.
If (when) you fail to do that, you should try even harder to make sure you never ever repeat that same error again.
This is why we always go on about what we are doing wrong and how we will better ourselves, because that is to us the only way forward.
Since we rely on our providers, we naturally have to make these same demands against them.
The only way we can fix this, is therefore to get these same answers from them or switch provider.
We will get back to you whenever we know which one it will be.
Does any of you know a good DNS provider we could use? :)

Sorry for the problems, but hopefully we will start seeing fewer and fewer of these.
And keep up the great feedback, it's a really fast way to make *everything* better.
And although we love your feedback as it is, please try the feedback button to the left on the web site instead of sending it to us personally, even if you know us really well.
Then others can take part in the discussions or know about the issues as well.
We know it's scary when it's all empty and clean, but you get to say FIRST! :)

/Team Defold

Release 1.1.1: Fix for Mac
--------------------------
_April 1, 2012_

We unfortunately shipped a serious bug with the alpha-release.
It occurred for Mac-users when trying to save files in the editor (obscure error dialog).
There is now a new version (1.1.1) available and it will be automatically installed the next time you start the editor.

=== How could this happen?

We use a version control system called _git_ for sharing the projects and hastily stripped and bundled this during the week for the alpha release.
The problem was that we packaged it on a dev machine which had a non-standard setup of components.
This caused missing dependencies for users with standard machines.

=== How will this not happen again?

We have a vanilla mac which we will make as vanilla as possible and will test all further versions on there before releasing.
We are still learning when it comes to deploying multi-platform and this was something we had missed.

Sorry for the hassle!

/Team Defold

Release 1.1.0: Alpha!
---------------------
_April 1, 2012_

After lots of work and late nights, we have finally arrived at the alpha stage.
Although there is plenty more to add and fix, Defold is now functional to use for game development.

Big thanks to everyone who helped us get here!

=== Alpha and Beta Access

You, our beloved pre-alpha Defolders, have been given five invitations each.
You can use them in the dashboard to invite your friends.
Each invited person will be given less invitations to hand out and the whole system gracefully limits itself.
There's always a chance of receiving more invitations by contacting us.

Invited people can set up a free account immediately.
We have also provided an open application for beta access on the front page.
Once we reach the beta phase, we will start to draw from this queue as our capacity grows.

We will close down the old top-secret communication channels and urge you all to start using the feedback button to the left on the web site instead.

Onwards and upwards!

/Team Defold

Update: Invitations & Beta Registration
---------------------------------------
_March 26, 2012_

We are currently working extremely hard for the Alpha release due next weekend.
This is when Defold will be publicly unveiled and we are trying to get everything as polished as possible in time for this major event.

Going into Alpha means that more people will be invited to use the service.
You, our beloved pre-alpha users, will also receive a number of invitations to hand out.
We will still not charge anything during the Alpha phase.
We are still working on the details of our licensing model, it will be thoroughly explained by next weekend.

Since we have so much to do, this update post will be rather brief, at least relatively how much it contains.

=== Invitations & Beta Registration

Starting next weekend, anyone can register for Beta access on the link:/[front page].
In addition to this we, as well as you, can invite a limited amount of interested people for Alpha access.
We can't open the gates completely yet, as we can't handle too much support at the same time.
That might make us sacrifice the quality of the support, and we want every user to have the best possible experience.

=== Local Branches for Windows

We fixed the issues involving using local branches on Windows.
We have also bundled both Java and OpenAL (which we use for sound) with the application so no need to install separate software.

=== New Names

We have not been entirely happy with the naming of some concepts in the Defold service and decided to fix the worst ones.
This is what has changed:

* _Sprite2_ => _Sprite_ (Sprite2 was a new format that has now completely replaced the old one)
* _Spawn Point_ => _Factory_
* _Tile Set_ => _Tile Source_
* _Tile Grid_ => _Tile Map_

We hope you agree that the new names are easier to understand.

=== Other Features

* Browsing for resources is filtered by extension
* Optimized performance in the Scene Editor
* Cleaned Preferences from settings only used for internal debugging
* A progress bar is shown when creating a branch
* Improved error handling in the pipeline
* Tabs are automatically shown when building/reloading to show progress and errors
* Physics can be scaled for increased numerical precision
* More link:/doc[documentation]
** link:/doc/scripting_debugging[Scripting & Debugging]
** link:/doc/message_passing[Message Passing]
** link:/doc/reload[Hot Reloading]
** link:/doc/physics[Physics]
** link:/doc/tiles[Tiles]
** link:/doc/game_project[game.project]
* Web site footer
** link:/about/story[Defold Story]
** link:/about/eula[Terms of Service]
** Support links
** Social links

=== Fixed Bugs

* Rebuild did not rebuild all content
* Renaming empty directories did not work
* Safari version (web) was not correctly checked
* Some menu items pointed to removed functionality (items were removed)
* Errors and warnings in Problems and Error Log tabs
* Name of user was missing in web page after registration
* Problems when deleting layers from tile maps
* Tiles were not properly updated (graphics/physics) when the textures were modified externally
* Icon was missing for embedded shapes in the Outline view
* Various issues with manipulators in the Scene Editor
** Not properly updated when adding/removing objects
** Rotation manipulator did not behave correctly for 3D rotations
** Scale manipulators seemed to be in world space but acted in local space
** The manipulation selection in the Scene-menu was not properly updated
* Various inconsistencies when selection was updated as a result of something else (e.g. undo)
* Animations and collision groups in tile sources could not be copy-pasted
* Palette and brush was not correctly rendered (transparency) for tile maps
* Changing the properties of a layer made its tiles seem like they didn't belong to it (dimmed out)
* game.project without a final blank line could not be read by the engine
* Tile maps with multiple layers did not get correct collision shapes
* Triggers did not collide correctly with tile maps

=== Known Bugs

* Kinematic and dynamic collision objects completely within the collision of a tile map won't generate collision responses
* Box selecting many objects on Windows has poor performance (hitches)
* Tiles with different collision groups are not properly stitched (might result in bumps or stops when sliding objects over them)


Mini-Update: Bug Fixes
----------------------
_March 5, 2012_

We found a few issues with drag and drop that we felt were important to fix.
With them came a list of other useful fixes as well.
This release includes:

* More stable drag and drop (errors would occur when dropping items onto themselves or in empty areas)
* We are testing another service for reporting issues and giving feedback called User-Echo.
  You can try it out by clicking the Feedback-tab to the left in the web site.
  There is a link to the service in the footer called "Forum".
  We also added a link from the editor at *Help > Feedback...*
* Added a link to the documentation in a similar manner at *Help > Documentation...*
* The editor will now check for updates automatically on start-up.
  So this would be the last one you manually update to.
* Links to download the editor from the website was missing, they have been added in the dashboard.
* The status of files (modified, added, etc) in the project explorer was not updated after commit.
* When spheres and polygon (box) collision shapes intersected much enough, the engine would experience computation failures with severe frame drops.
* The errors when running the game (starting with "ERROR:DDF: Name clash.") have been removed.
* We have changed some functions related to node properties in gui scripting to be more compatible with each other (mostly by accepting both vector3 and vector4 as arguments).

Right now we are aiming to be ready to take in more external users in a
week, so expect more great updates in not too much time!
To be able to do this however, we need all of you to move over to the local
branches. We need to switch off our content server in order to open up the
firewall, since that server has no adequate authorization mechanism in
place. We will contact you about this individually though, so await further
instructions. :)

/Team Defold

Mini-Update: Copy-Paste & Drag 'n Drop
--------------------------------------
_March 3, 2012_

We have just made another smaller release, to fix a few lingering issues from the last one.
Copy/cut/paste has been slightly changed, drag and drop in the outline view has been implemented.
The Tile Set Editor failed to open from the last release, this has also been fixed.

=== Copy/cut/paste

When you select an item in the outline, the parent of that item will be used as target for the paste operation.
So if you select an item and hit copy-paste, that item will essentially be duplicated as another item under the same parent.

=== Drag And Drop

You can now drag around items in the outline.
The only really useful thing at the moment is to use it for rearranging the game object hierarchies, like making a game object the child of another game object.
It can also be used to move shapes between different collision objects, but that is a rare use case.
It's great to have it in place though, since it will be used for more things later on.

That's it for this time!

/Team Defold

Update: Collection Editing & Local Branches
-------------------------------------------
_February 28, 2012_

=== Collection Editing

We have now finally ported the functionality of the old Collection Editor to the Scene Editor.
This imposes a few changes, but all for the better we hope.
Our ultimate goal is to have all the visual editing done in the Scene Editor so everything behaves the same way, whatever resource you are editing.

=== Condensed Outline

In an effort to simplify the hierarchical content in the outline, we have tried to remove as many redundant items as possible.
An example of this would be when you added a component to a game object, which resulted in one item containing the component id and a sub-item with all the specific component properties.
Such items have now been merged into one, with all of the properties available in the same place.
This should hopefully make it quicker to find the data you are looking for.

image::images/blog/20120228/one_item_per_level.png["Merged properties", align="center"]

=== Copy-Paste

We have now implemented copy-paste (and cut of course) in the Scene Editor.
This will hopefully make it easier to build things faster.
We have also enabled multi-selection in the Outline View and box-selection in the Scene View.
Drag-and-drop, which is related to this has yet to be implemented at a later time.

=== Filtered Visualization

You can now select which types of objects to be shown in the Scene View through *Scene > Show*.
We added the most common ones, but let us know if there are any we have missed.

image::images/blog/20120228/filtering.png["Visualization filtering", align="center"]

=== Parenting Game Object Instances

To make a game object become the parent of another game object inside a collection, you would previously select both game objects in a specified order and use the Parent-command.
Our goal is for this to be done by simply clicking the child game object and dragging it onto the parent.
Until drag-and-drop has been implemented, you instead have to cut the child, then select the parent and paste the child, which will make it appear at a level below the parent.
We realize that this is not really intuitive, but it's just a temporary solution.
This also means that if you select a game object instance and hit copy-paste, the copy will actually appear below the original item as well.
This can currently be considered a design bug.
As soon as drag-and-drop has been implemented, this will of course be fixed and work much better.

image::images/blog/20120228/hierarchy.png["Game Object Hierarchy", align="center"]

=== Colored Axis

We have realized that it's been a bit hard to navigate around in bigger collections, since there is no reference point of where the center (origo) is.
We have colored the base axis to give you a point of reference where the different coordinates are zero.
The colors are red, green and blue and correspond to x, y and z respectively.
This comes from the common acronym RGB and is a standard in most 3D software.

image::images/blog/20120228/axis_color.png["Colored Axis", align="center"]

=== Local Branches

*NOTE!* This feature is currently only available to non-Windows users.
We have an issue on the Windows platform that we haven't resolved yet, sorry for the inconvenience!

There is a new setting in the preferences (*File > Preferences > Defold > Use local branches*) which controls whether the branches you create are stored on your own machine or on our server.

image::images/blog/20120228/local_branch.png["Local Branch", align="center"]

This is in other words optional, but we think the benefits of working on a local branch are better than when working against the server.
Connecting to the project, opening files, building and running the game are all faster for a local branch.
Since you have the files in your file system, you can also open them with other editors (like image and sound editors) and modify them without having to move them back and forth.

There is also a new menu item in the context menu of the Project Explorer called *Show in file browser*, which you can use to locate the files on your machine.
Whenever you edit the files this will be detected by the editor so it will stay updated.
Note though that there might be a small delay before it is.

To start using local branches, you should first synchronize all of your current changes.
Then you check the box *Use local branches* in the preferences, as described above.
Reconnect to your project (*File > Open Project*) and create a new branch.
Note that creating a local branch might take a while as all files are downloaded to your local machine at once.

=== Bundled Engine

We have finally bundled the engine (the application used to run your games) with the editor.
This means that you don't have to synchronize your branch anymore to receive the latest engine, it will be updated when you update the editor.

=== Fixed Bugs

* When adding game objects to collections, they were always placed at the center of the world instead of the center of the camera.
* A game object could not spawn another game object if it was deleted in the same frame.
* Better documentation of the go.delete-function.
* Missing support for *Select All* in the Scene Editor.

=== Known Bugs
* When creating a local branch, it might take a while and there is no progress bar visible.
* There are errors in the editor console starting with "ERROR:DDF: Name clash.". These can be safely disregarded and will be fixed at a later time.

=== Roadmap

We are currently working on the drag and drop feature for the outline view and hope to release it at the end of this week.
The iOS support is also well under way, but there is still more work needed to be done to get the right workflow we are looking for.
The vision is to make the iOS device act just like another screen of your computer, so the configuration and manual steps involved are minimal.

As always, remember to let us know about any suggestions, annoyances, issues, or plain great ideas you might get while using this release.

Thanks for reading!

/Team Defold

Update - Introduction & Spawning
--------------------------------
_January 31, 2012_

The last two weeks we have been busy improving the documentation and implementing a few longed for features.

=== Introduction

We have worked hard at writing more documentation and are finally ready to show the new link:/doc/introduction[introduction].
It comes with a new link:/doc/side_scroller[tutorial], which demonstrates tweaking and the construction of game objects.
We hope that you can gain some more insight into our design from the introduction.
Hopefully, most of it should be old news by now but helpful for new users.

=== Spawning

Due to popular request, we have improved the creation of game objects while running the game.
We have introduced a new function called +factory.create+.
It returns the id of the created game object so it can be used for message passing.
In accordance with this we have also extended the +msg.post+ function to take an id instead of a full url.
When passing an id the following two calls are equivalent:

[source-code, lua]
----
msg.post(my_id, "my_messasge")
msg.post(msg.url(nil, my_id, nil), "my_message")
----

We have also implemented the abillity to pass custom parameters to the +factory.create+ function, which can be received in the init-function of a script.

To show by example, you can create a new game object like so:

[source-code, lua]
----
factory.create("#factory", go.get_position(), go.get_rotation(), {my_value = some_value})
----

And then use the +my_value+ parameter in the script of the created game object:

[source-code, lua]
----
function init(self, params)
    self.my_important_value = params.my_value
    -- use self.my_important_value later
end
----

Note that we assume in the first example that the game object has a spawn point component called +factory+ and that the position and rotation of the original game object is sufficient.
Factory is a new name for the spawn point component we used in the introduction.
We haven't changed the name of the component yet, just the name of the new function.
We are sorry if this is confusing, but in short you should be able to use your spawn point components as usual and just use the new function for triggering them.
We will let you know when we change the name of the actual component.

The biggest benefit of this is the ability of separating the behavior of your newly created game objects without having to rewrite their scripts.
Our plan is to introduce this same feature when adding game objects in a collection, so you can specify different starting values for them too.
We will implement this as soon as it deems necessary.

We have also extended the +go.delete+ function to take an optional id.
This means that you can delete other game objects than the one containing your script.
If you leave out the id, it deletes the game object containing the script, as usual.

[source-code, lua]
----
go.delete(some_id)
----

=== Bugs

We also managed to fix some more bugs:

. Collision objects didn't contain the group +default+ in their masks by default, which was misleading.
. Fonts didn't have the appropriate _Material_ set by default.
. Positions for components (sprites and collision objects) were specified in 4d instead of 3d, which was confusing.
. The platform template project had some issues resulting from earlier updates.

=== Roadmap

The link:https://docs.google.com/document/d/1I-0Y2zfUjsG-E44gRSxabLXaN19jB6p7EfvwICCcCXk/edit?hl=en_US[roadmap] has been updated and you are most welcome to contribute by commenting on what is important to fix.
Our goal is to involve you in the process of prioritizing what needs to be done.
Please let us know if you see any better way of achieving this.

Hope you like these new features and we look forward to hearing your feedback in the link:http://groups.google.com/group/defold-users?hl=en[user group].

Update - Feature Requests & Bug Reports
---------------------------------------
_January 15, 2012_

We have received a lot of feature requests and bug reports during the last weeks, which we appreciate a lot!
So this week we have taken a break from writing the User Guide and instead focused on resolving as many issues as possible.

We have started to add you who report the issues as correspondents on the bugs, to give you a notification when they are fixed.
Please let us know what you think about that, do you like it or does it get too spammy?

=== Enable/Disable for Collision Objects

Collision Object components can now be enabled and disabled through message-passing (see link:/ref/go#enable[enable] and link:/ref/go#disable[disable]).
Disabled collision objects are temporarily removed from the physics simulation, which means they don't collide with other objects.

Dynamic collision objects also cease to move the game objects they belong to when disabled.
It is possible to move dynamic collision objects through the script while they are disabled.
Once they are enabled, they will start being simulated again at their new position.

=== Movable Sprites

Sprites can now be moved in the Scene Editor (only applies to the new Sprite2 component).
This means that you can put two Sprite2 components in the same game object and move them in relation to eachother.
This should make it easier to build more visually complex game objects.

image::images/blog/20120115/sprite_placement.png["Sprite Placement", align="center"]

image::images/blog/20120115/search.png["Search Lights", align="center"]

=== Linear Texture Filtering

To avoid visual artifacts and ensure pixel perfect images, we have previously disabled texture filtering.
Texture filtering typically makes a scaled image blur, instead of becoming pixelated.
This has resulted in other artifacts, specifically when rotating objects, which gave a blocky and almost noisy appearance.

The current solution is to enable texture filtering along with clamping the position of sprites to integer values.
The clamping can be disabled in +game.project+ by including:

----
[sprite]
subpixels = 1
----

This makes the overall visual quality much nicer, but also introduces slight color bleeding in some situations.
We have different ideas on how to improve this further.
For now, we will let it be until it becomes more critical.
Please let us know how the visual quality of your game was affected by this release.
We really hope it will be significantly better.

image::images/blog/20120115/filtering.png["Nearest vs Linear filtering", align="center"]

A related bug to this was that sprites and tile grids appeared to move differently when moving a camera.
The impression was that the sprites would float or hover a bit back and forth in relation to the tile grids.
This should not be an issue anymore.

=== Bugs

Below is a list of the bugs we fixed in this release.

- Z-ordering between tile grids and sprites did not work; sprites were always rendered on top
- Different visualization problems with collision objects in collection editor and scene editor
- The sender-field when receiving collision messages was not set correctly (should be the collision object component causing the collisions)
- The buffer size for sending custom script messages has been increased (it was not enough for very large messages, like save data)
- Blend modes in the GUI system was broken, specifically "add alpha" (known issue remains when blending text nodes)
- After deleting a game object referenced in a collection, opening the collection made the collection editor crash
- After deleting a component referenced in a game object, opening the game object made the scene editor crash
- Two colliding kinematic collision objects ceased to collide after a while
- Missing documentation for camera messages (+set_camera+, +acquire_camera_focus+ and +release_camera_focus+)
- Visual gaps appearing between tiles in a tile grid when moving a camera
- When creating new branches with spaces in their names, different problems would occur (fixed by only allowing valid characters)
- After adding an embedded shape to a collision object, the editor would still warn about the shape-field being empty
- Missing documentation for +sys.get_save_file+
- The tile set-field in Sprite2 components was not updated correctly when referenced tile sets where renamed/moved/deleted
- Cryptic build error when building a Sprite2 component without its default animation empty
- Specifying a spawn point component to spawn the same game object it resides in made the engine crash when loading the game (results in error now)
- When creating embedded collision boxes, the width/height/depth was expected to be half the values (they are actually the full width/height/depth now)

=== Roadmap

We will continue work on the User Guide next.
Don't forget to comment and vote for things in the Roadmap document.
We have updated it a bit to reflect the recent discussions about spawning and tile grid editing.

Hope you enjoy the fixes!

Update - Web Site Face Lift & Script Samples
--------------------------------------------
_January 8, 2012_

=== Web Site Face Lift

As you have probably noticed by now, our web site has had a major face lift.
We have also restructured the information a bit, but everything should hopefully be easier to find now.

We have also added two new features to the link:/dashboard[dashboard].

The first is that we now use link:http://www.gravatar.com[Gravatar] to supply the avatars for us.
To have your own avatar appear in the dashboard, link:https://en.gravatar.com/site/signup/[register] with Gravatar and setup your avatar there.
We think Gravatar is a great service and hope that it will catch on more.

The second feature is that you can now see the activity in your projects.
Click on a project in the dashboard and the activity is displayed in the lower right.
When you create a project from a template, the activity from that template is currently copied into your new project.
So don't be alarmed if you see unfamiliar activity from us in the Defold-team or Mr. Builder, our former game-dev robot.
We will fix this at some point in the future.

image::images/blog/20120108/project_activity.png["Activity with Gravatars", align="center"]

=== Script Samples

We have added a few script samples on the link:/doc[documentation] page.
We hope they will both inspire and provide aid in understanding how to make animations and effects using scripting.
There are both samples that deals with gui animation (*HUD*, *Level Complete* and *Main Menu*) and game object animation (*Parallax*).

We have also uploaded videos to Youtube showing the samples in action.
To produce the videos, we used the new video capturing feature we added earlier in the week.
Even the title screen at the beginning of each video was captured in the engine.
The title screens are in fact a single GUI scene that we populate with different data depending on which sample to capture.
This means we don't have to do any video editing when we change the content of the samples, the videos will be ready for upload immediately.
Ask us for details in the user group if you are curious about how to do this yourself.

We have not yet added the script samples as template projects, but we will do that as soon as possible.

=== Bugs

We also had the time to fix a few more bugs that crept up.

- Render was missing from the reference documentation
- vmath.lerp did not accept numbers in addition to vectors and quaternions
- Animations could not be deleted from tile sets

=== Roadmap

Apart from including the script samples as template projects, we will continue with the User Guide next week.
Please, check out the Defold Roadmap we posted in the group for more details.
Remember that you can influence what we should work on by commenting in the document.

We hope you like the new web site! Tell us what you think in the user group!

Update - Video Capture, Fonts, Colors, Tweaks & Bugs
----------------------------------------------------
_January 5, 2012_

=== Video Capture

We are proud to announce that you now can capture videos of your running game from within your scripts!
Certain members of the Defold-team failed to relax during Christmas and instead implemented this excellent feature.
It is controlled through message passing and very easy to use.
Simply do the following in a script when you want to start recording video:

[source-code, lua]
----
msg.post("@system:", "start_record", { file_name = "test_rec.ivf" } )
----

When you want the recording to end, do:

[source-code, lua]
----
msg.post("@system:", "stop_record")
----

The messages are explained in more detail in the documentation under link:/#documentation:[Engine].
The recorded file is compressed through link:http://en.wikipedia.org/wiki/VP8[VP8] in the link:http://wiki.multimedia.cx/index.php?title=IVF[IVF] container, which can be uploaded to Youtube as is.
When the time comes, we will add the ability of uploading to Youtube from your scripts too.
This means that you can let players capture their gaming sessions and upload them from inside your game!

If you want to convert the files to a more common format, you can use link:http://www.mirovideoconverter.com/[MiroVideoConverter].
There seems to be a bug when playing these files through VLC, it stops playback around 1 second before the video should end.

We haven't yet had the time to include audio in the captured videos, but we hope that this feature can be of value anyway.
This will of course be fixed in time.

=== Fonts

We have fixed the font rendering, which has been rather ugly for a while.
We also added the ability to set color and alpha of outlines and shadows from within the GUI editor.
We have not yet had the time to render them properly in the editor preview, but the effects should be visible when running the game.

image::images/blog/20120105/fonts2.png["Fonts in the GUI Editor", align="center"]

image::images/blog/20120105/fonts.png["Fonts in the running game", align="center"]

=== Background Color

It is now possible to set the background color of a game in the game.project file.
This is a work-around until we have fixed this properly, so it will be easier to specify.
To set the color to bright red, include this in your game.project file:

----
[render]
clear_color_red = 1
clear_color_green = 0
clear_color_blue = 0
clear_color_alpha = 0
----

Note that the values should all be between 0-1.
You can also change the background color on the fly in a script by doing:

[source-code, lua]
----
msg.post("@render:", "clear_color", { color = vmath.vector4(1, 0, 0, 0) } )
----

=== game.project to scripts

You can now read data from game.project inside your scripts.
This is mostly useful for testing purposes, but can also be used for reading global configuration data.
Below is an example of how to add and read data.

In your game.project file, add:

----
[my_category]
my_value = 1
----

Then you can read the value inside your scripts, like so:

[source-code, lua]
----
local my_value = tonumber(sys.get_config("my_category.my_value"))
----

This is detailed in the documentation under link:/#documentation:[Script].
Also note that you can read any value from the game.project-file, e.g. "display.width".

=== Bugs

We also fixed some annoying bugs.
Here is a list of what we fixed so far:

- Spawn points with no prototype specified caused ugly build errors
- When browsing for gui-scripts in gui-files, no files would appear
- Rotation and scale were not visualized in the GUI editor
- Files were not automatically saved when building (launching the game)
- Refactoring for tile grids did not work
- Deselecting a running animation in a sprite caused problems
- Issues when selecting manipulators with the mouse in the Scene editor
- Some nodes in the Collection editor seemed like they could be transformed, when they couldn't (e.g. tile grids)
- Missing documentation for physics.ray_cast script function (see documentation under link:/#documentation:[GameSys])
- Ray casts of zero length yielded assert (engine crash)
- Misleading message when launching the game with empty resource paths
- Crash when rendering a GUI with many nodes

Please let us know if there are more bugs in need of urgent remedy.

=== Roadmap

Don't forget to comment on the roadmap we posted in the user-group.
As of now, we are working hard on documentation and an update of the web site, but we are anxious to hear about what you want to be fixed.
Since this update has been very technical, you are most welcome to post in the user-group if anything was unclear or you just like more information.

Hope you like this update!

Update - Lots!
--------------
_December 22, 2011_

It has been almost exactly a whole month since our latest release.
We aim to have a minimal release cycle (a week optimally), which would both let us get immediate feedback and be able to respond to new requests faster.
This time, however, there was simply too much that needed to be done.
To make up for this, we made this release extra fat and juicy, as appropriate for the holidays to come.
A month-long crunch is over and the Defold-team is about to kick back for four entire days!

=== Sprites, 2nd Edition

We have implemented the basics of the redesigned sprite system.
Since this breaks backwards compatibility, the new component is called 'Sprite2' and the old component is considered deprecated.

What we implemented so far is that sprites now uses the tile set files, similar to how tile grids use them.
The animations are defined in the tile set, which simplifies trigging them in the scripts.

image::images/blog/20111222_sprite_anim_collision_editing/sprite_editing.png["Sprite Editing", align="center"]

Let us show by an example. To trigger an animation the old way, you would have a script that did:

[source-code, lua]
----
msg.post("#my_sprite", "play_animation", {start_tile = 1, end_tile = 3, playback = 1})
----

With the new system, you add the animation to the tile set (*Tile Set > Add Animation*). Then, in a script, you do:

[source-code, lua]
----
msg.post("#my_new_sprite", "play_animation2", {id = hash("my_animation")})
----

This also means that there is only one place to update if you want to change the layout of your tile set.

The animations added to the tile set can also be previewed in-place in the editor.

image::images/blog/20111222_sprite_anim_collision_editing/animation_editing.png["Animation Editing", align="center"]

Simply select an animation and then *Tile Set > Play/Stop Animation*.
This makes it much more easy to make sure you have specified the animation correctly.
Here is a clip showing how it looks:

link:/site/images/blog/20111222_sprite_anim_collision_editing/sprite_anim_preview.mp4[Animation Clip]

When an animation in the new system has completed, the script which started it will receive an 'animation_done2' message.
We have updated the link:/#documentation:[documentation] to describe the new messages.

Speaking of tile sets, we have also fixed an issue of the collision group colors changing anytime the list was reordered.
Now they stay the same color, and also yields an error if you use more groups than the maximum allowed (16).

We have yet to implement the cues which will let you post messages automatically at certain frames during the animations.
This is a great way to trigger effects for example.
We also post-poned the flip-tile feature, which will let you reuse tiles for different animations.
An example of this would be to have walk animations going both left and right based on the same set of tiles, but flipped for one of the directions.

=== Backwards Compatibility

We are very concerned about always staying backwards compatible, but there will always be improvements that force us to move forward.
The new sprite system is an example of this.
To not break any of your content, we are now testing a strategy of having three different stages to counter for this.
This is briefly what each stage means:

. The 'Sprite' type becomes deprecated, any such components will be flagged with warnings when opened.
  You should convert any such components to the new 'Sprite2' component.
. Support for the old 'Sprite' type is removed.
  'Sprite' and 'Sprite2' both means the new type now.
  Convert all 'Sprite2' components to 'Sprite'.
. Support for 'Sprite2' is removed.

It might seem complicated, but we hope that the guidance in the editor will be enough to lead you through it.
There will be weeks of time between each stage, so you should have plenty of time to make the adjustments.
It is also an experiment and we love to hear about any other ideas on how to do this as painless as possible.
Our main goal is to never break content with a new release.

=== Collision Objects

We have implemented many longed-for features regarding collision objects too.
It's been a nuicance to create separate convex shape files to specify the geometry for collision objects.
Now you can add them in-place in the editor, both for collision objects embedded in a game object and collision objects in separate files.
You can also add multiple shapes to the same collision object, to construct more complex collision shapes.

It was also very hard to specify their geometry in the property grids we used before in the editor.
Now we have added more manipulators (similar to Maya) to adjust the shapes in the scene view.
The manipulators are activated through the new *Scene* menu.

An example of this would be to select a sphere and then *Scene > Scale Tool*, which lets you adjust the radius of the sphere visually.
The tool works similar for other shapes, depending on their constitution.
The shapes can also be moved and rotated in relation to the collision object they belong to, through the *Move Tool* and *Rotate Tool* respectively.
The translation and rotation can still be specified in the property view too.
The rotation is now specified by euler-coordinates (degrees around each axis), which are much easier to use than quaternions.

image::images/blog/20111222_sprite_anim_collision_editing/shape_editing.png["Shape Editing", align="center"]

=== Scene Editor

The manipulators described above are examples of how we have further improved the Scene Editor.
When needed, we will implement the same kind of functionality for other components.

Other new features is that the camera now works similar to the Collection Editor, i.e. Maya-controls.
It supports tracking (going sideways) and dollying (zooming).

The framing functionality from the Collection Editor has also been re-implemented in the Scene Editor.
It can be accessed through *Scene > Frame Objects*.
It frames whatever is selected, or all objects if nothing is.

=== Update Editor

Go to *Help > Check For Update* to update the editor to the latest version.

image::images/blog/20111222_sprite_anim_collision_editing/update_editor.png["Update Editor", align="center"]

=== Google Groups

As you all hopefully have noticed, we have started a Google Group for Defold users.
We hope that it will soon spur with activity and be sufficient as our community forum.
If you need support, this is currently the best place to turn to.
Issues with the service or concrete change requests should still be directed to the cases-mail.
We will add a post on how to use it in the group, to avoid spammers.

We are also proud to announce that two new projects have joined the Defold community!
So oldies, please be kind to the newbies in the group. :)

=== Roadmap

We are going to have a big planning day on December 27.
After that, we will post a list of the different areas we think needs improvement in the user group.
Our hope is to get a discussion going and to get feedback from you about which areas are the most important.
We really want to involve you all more in prioritizing what needs to be done when.
For now, these are the areas we have had in the roadmap for a long while:

. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure
. Rendering Improvements

The Defold-team wishes you all a merry christmas!

Update - Scene Editor
---------------------
_November 21, 2011_

=== Scene Editor

We have made lots of changes in the Scene Editor during the week.
First we did some major restructuring of the code, to make the foundation as stable and clean as possible.
Clean code means faster development cycles and less bugs, so we really hope this will get us up to speed when implementing new editing functionality, without sacrificing stability.

We also did more work on the presentation, to give you an idea of how we want it to be like.

The background in the Scene Editor is now a nice gradient (like the collection editor), which can be configured through File > Preferences.
Select Defold > Scene Editor in the dialog.

The outline view now displays icons for the items, along with markers if there are any issues in the data.
If you hover with the mouse over such a marker, a tooltip is displayed.

image::images/blog/20111121/sceneed_markers.png["Outline markers", width=880, align="center"]

You can also open referenced files in the outline view by double-clicking the items (or hitting enter while they are selected).

The property view has been extended with the ability for us to disable irrelevant fields.
An example of this is when you have a collision object with its type set to anything else than dynamic.
Its mass is then irrelevant, since it should always be zero.
This is now taken care of by the editor and pipeline.

image::images/blog/20111121/sceneed_icons.png["Outline markers", width=880, align="center"]

We have also made the values in drop-down lists more readable.

We have updated the icons for some of the file types and items.
We hope they not only look better, but also more clearly reflects their type now.

=== Lua Editor

The Lua Editor was not very good at handling comments before.
This has now been fixed and it colors both multi-line comments and single line comments correctly now.

[source-code, lua]
----
local my_var = 1 -- this is a single line comment

--[[
This is a multi-line comment
--]]
----

Please let us know about any other fixes or suggestions through the cases-mail.

In the coming week we will work on sprite editing and collision object editing in parallel.

=== Roadmap

. Scene Editor - Sprite and collision object editing
. Documentation - User Manual, Tutorials, etc
. Rendering Improvements
. Website - Re-designed layout and structure

Update - Scene Editor
---------------------
_November 17, 2011_

=== Scene Editor

Progress on the new Scene Editor has been a bit slower than we hoped, but now it has finally been released for you to try out!
Update the editor to 1.0.44 and it should be activated whenever you open a game object.
There is still more work needed to be done regarding presentation and visualization, but at least it now supports the functionality of the old version.

It has become apparent that a lot of tasks in the editor involves going back and forth between the outline view and the properties view.
Because of this, we have moved the outline view to be right above the properties way.
It also felt natural to have the views related to file resources to the left (Project Explorer and Changed Files) and content related views to the right.
Please comment if you have any other ideas on how the views should be restructured.

image::images/blog/scene_ed_go.png["Scene Editor", width=880, align="center"]

=== Sprites

As soon as the game object editing and the basic functionality of the Scene Editor has been completed, we will implement the new sprite editing in it.
We made several passes on the design and it feels promising now.
A feature worth mentioning are predefined animations and cues.
When a cue is hit during an animation, the sprite component will broadcast a message to the other components.
This makes it easy to trigger sounds and other effects, register hits during attack animations in action games and lots of other possibilities.

=== Tiles

We have fixed a few more tile-related issues last weeks and how now deemed that system stable.
There are probably a few more bugs lurking around, but hopefully not too many.
Don't forget to report any issues to the case-mail.

=== Content Pipeline

The new content pipeline has been installed on the server.
We have been given the permission from one of the projects to use it as a test bed.
Then we can verify stability in a real production environment.
We really appreciate that, thanks a lot!

=== Roadmap

. Scene Editor - Limited release supporting game objects, sprites and "simple types"
. Sprite Editing - Improved
. Content Pipeline - To only be used for testing at the moment
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

Thanks for reading and don't forget to use the case-mail!

Update - Scene Editor & Content Pipeline
----------------------------------------
_November 6, 2011_

=== Scene Editor

A new editor has spawned as a result from the design work on game object editing, it is called the _Scene Editor_.
It will ultimately replace all the other editors, with the exception of text (scripts and shaders) and 2D (tile sets and guis) editors.

It has a mix of behaviours and functionality from the current editors, but all put into one.
It will support in-place items and items referenced from files, like the current game object editor does.
It will also support the structural and visual overview that the current collection editor has.
This makes it suitable for editing any item present in the scene graph, such as collections, game objects, sprites, cameras, etc.

It was tricky to design because of its complexity, so we made a prototype to get a better understanding of the problem.
The prototype has been completed and we really feel we are onto something interesting now.
Below is a screen-shot of the prototype, please note that presentation was not a priority. :-)

image::images/blog/scene_ed_prot.png["Scene editor prototype", width=880, align="center"]

There are a bit more design-knots to untie, but we hope to be able to release a working version in a week, hopefully replacing the current game object editor altogether.
That release will still be limited feature-wise relative the ultimate goal of course, but would cover the features currently available.

=== Content Pipeline

The content pipeline now satisfies all the requirements we currently have on building content.
The next step is to install it on the server and let it run there silently for an extended period of time.
It is crucial that a content pipeline have high stability, since bugs in them can appear as changes not making it to the running game or even broken builds.
Such bugs can be hard to track down too.

Once we feel it's stable enough, using real content as test data, we will continue working on the local build feature.
There are a few more things needed to actually make it work, regarding security and so on.

=== Roadmap

. Tile Usability - Any known and new issues, workflow improvements, etc
. Scene Editor - Limited release supporting game objects, sprites and "simple types"
. Content Pipeline - To only be used for testing at the moment
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

Thanks for reading and hope you will enjoy the upcoming features!

Update - Sprite Design, Tile Fixes & Content Pipeline
-----------------------------------------------------
_October 31, 2011_

=== Sprites

We have completed the first iteration of how sprites should be integrated with the tile sets.
Here is a list of the features included in the first version:

* Predefined animations in the sprite component
* Play animations for previewing in the editor
* Play animations in-game from scripts
* "Animation done" notification message to scripts
* Animated collision geometry
* User-defined cues at specified frames (to trigger sounds etc)
* Color tinting from scripts

To achieve better efficiency and higher quality, we are also trying out a modified development process for new features.
It looks roughly like this:

. Initial design (Phase 1)
. Feedback
. Revise design
. _Pause_
. Design (Phase 2)
. Planning - Break down into use-cases/stories/cases
. Implement with TDD (Test Driven Development)
. Initial Deployment
. Testing
. Bug reports and feature requests
. Prioritize
. Fix bugs and implement feature requests
. Deployment of 1.0

Right now we have come to the _Pause_ stage.
The idea is to let the design settle and be able to come back to it later with a fresh mind.
In the mean-time, we will continue to work on the design for the new Game Object editor.

=== Tiles

We had some collision issues with the new tile system.
It turned out that when aligning blocks to form ground and other continuous shapes that span over several cells, objects could fall through between the cells.
This issue has been fixed.

Another related problem is that not all of such cells are properly stitched together.
This causes little "bumps" to remain in the collision geometry, sometimes causing objects that slide across the surface to get stuck.
(The images are by courtesy of Mikael Säker.)

image::images/blog/platform_tutorial/character_stuck.png["Character getting stuck against the edge of new collision geometry", align="center"]

We are still working on a solution for this, but we did improve the in-game physics debugging.
It is much easier to see what's going on, physics-wise, in the games now.

image::images/blog/platform_tutorial/character_stuck_debug.png["Improved physics debug rendering", align="center"]

To enable and control the debugging, the following options are now available in the game.project-files:

* physics.debug - 1 to enable, 0 to disable
* physics.debug_alpha - alpha value to use for all physics debug rendering, 0.0-1.0
* physics.debug_scale - how big things like normals should appear on screen

Here is a sample of a game.project-file:

----
[physics]
debug = 1
debug_alpha = 0.8
debug_scale = 30
----

=== Content Pipeline

A long term goal we have is to enable users to build content locally on their own machines, in addition to the Defold-servers.
The biggest advantage of this is that build times would be lower, since we wouldn't have to send data back and forth over the internet.
Another advantage is that users can work and build content off-line.
It also means that we can integrate the pipeline into the editor, which in turn means better and more unified error handling.

The work has come a long way already and we are implementing a prototype at the moment to run tests on.

=== Roadmap

Currently, our roadmap looks like this:

. Tile Usability - Any known and new issues, workflow improvements, etc
. Game Object Editor Design - Better preview and editing support for components inside the game object editor
. Sprite Planning & Implementation
. Content Pipeline Prototype
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

That's it at this time!
Hope you enjoyed reading and, as usual, let us know if you have any feedback or suggestions.

Update - Tiles & Properties
---------------------------
_October 23, 2011_

Welcome to the first update-post from Defold!
This is a way for us to tell you a bit about what has happened lately and what lies ahead.

=== Tiles

We are very excited to have completed the first iteration of our tile-system.
Tiles are typically used whenever you want to place a lot of images in a grid based fashion,
for example in platformers, RTS- and TD-games.

To start putting tiles into your game, you first need to create a 'tile set' (.tileset).
In the tile set, you specify the image containing the tiles, as well as metrics on how you have ordered your tiles inside the image.
If you also specify an image for collision, collision hulls will be automatically generated for the tiles.

image::images/blog/tile_1.0/tileset_editor.png["Tile set editor", width=880, align="center"]

Please see the new menu *Tile Set* in the top menu bar for more of the features available when you are working with tile sets.

The next step is to create a 'tile grid'.
The tile grid is a new component that takes care of rendering and physics for the tiles in-game.
To be able to do this, the system needs to know which tile set you want to fetch the tiles from.
To start painting tiles into your grid, select a layer in the outline view.
If you look at the top menu bar, there is now a new menu called *Tile Grid* available.
Select *Tile Grid > Show Palette* to bring up the tile set you specified.

image::images/blog/tile_1.0/tilegrid_edior_brush.png["Tile set brush selection", width=880, align="center"]

Click on a tile you want to use, which will turn the cursor into a brush with that tile selected.
Paint your tiles, rinse and repeat.
To erase painted tiles, open the palette again.
Click on the selected tile, which will turn the cursor into an eraser.

image::images/blog/tile_1.0/tilegrid_editor.png["Tile set editor", width=880, align="center"]

To finally bring your newly painted tiles into the game, add the tile grid as a component to a game object present in the game.
If you also want to have collision on the tiles, add a collision object component to the same game object and specify
the tile grid as its collision shape.

image::images/blog/tile_1.0/collection_editor.png["Collection editor", width=880, align="center"]

Another cool thing is that you can change the tiles in-game from your logic scripts.
Check out the new 'set_tile' message in the documentation ('GameSys').

=== Properties

We have also completely revamped the property system used by the editor.
The most noticable thing is that the layout has changed from grid-based to form-based.
We have also started to employ a new usage-philosophy, which is that all user input should be accepted.
The input is still validated, but any errors or other message is now displayed in a non-intrusive way next to the related input fields.
No more annoying popup dialogs! :-)

image::images/blog/tile_1.0/property_messages.png["Property editor", width=880, align="center"]

All of this new editor functionality is of course up to Defold-standards, which means complete support for:

* Undo/redo
* Reload
* Refactoring

What we haven't fixed yet however (among others) are:

* More convenient tools for painting/editing tiles (please contribute with your own suggestions!)
* Reload of tile grids in-game
* Sprites are still created/animated as usual

=== Roadmap

This is our roadmap, as it looks at this very moment, ordered from sooner to later.

. Sprite re-design - How to incorporate sprites better with the new tile system
. Tile Usability - Any known and new issues, workflow improvements, etc
. Game Object editor - Better preview and editing support for components inside the game object editor
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

We really hope you enjoyed reading this.
As always, we would love to hear any feedback, change requests, complaints or other issues you experience while using Defold.
Direct them to the usual cases-mail.
Now go ahead and make a more original game than we did! ;-)

image::images/blog/tile_1.0/the_game.png["Tiles in-game", width=880, align="center"]

[source-code, lua]
----
-- clean termination
function final(self)
    print("The Defold-Team thanks you for your support!")
end
----
