#! /usr/bin/env python

from waf_dynamo import dmsdk_add_files
from waflib.Options import options

def configure(conf):
    pass

def build(bld):
    # We only need this library in the editor
    is_host = bld.env['PLATFORM'] in ('x86_64-linux', 'x86_64-win32', 'x86_64-darwin')

    if not is_host:
        return

    modelc_sources = bld.path.ant_glob("*.cpp")
    modelc_sources = [x for x in modelc_sources if not 'test' in x.name]
    modelc_sources = [x for x in modelc_sources if not '_jni.cpp' in x.name]

    # really only used for the unit tests
    model = bld.stlib(features = 'c cxx',
                      includes = ['.', './model'],
                      source = modelc_sources,
                      target = 'model')

    is_host = bld.env['PLATFORM'] in ('x86_64-linux', 'x86_64-win32', 'x86_64-darwin')
    if is_host:
        # Used by bob.jar + editor
        model_shared = bld(features = 'c cxx cshlib extract_symbols',
                           includes = model.includes,
                           uselib = 'DLIB PROFILE_NULL JDK',
                           source = modelc_sources,
                           target = 'modelc_shared')

    classpath = []

    bld(features='javac seq',
        classpath=classpath,
        srcdir='java',
        outdir='java')

    bld.env["JAVACFLAGS"] = '-g -source 1.7 -target 1.7'.split()

    bld(features='jar seq',
        basedir='java',
        destfile='modelimporter.jar')

    bld.install_files('${PREFIX}/share/java', 'modelimporter.jar')

    if not options.skip_build_tests:
        bld.recurse('test')
