#!/usr/bin/env python
import os, re


def configure(conf):
    pass

def build(bld):

    source = []
    if re.match('arm.*?android', bld.env.PLATFORM):
        source += ['gpgs_init_android.cpp']
        source += ['gpgs_interface.cpp']
        source += ['gpgs_impl_native.cpp']
    elif re.match('arm.*?darwin', bld.env.PLATFORM):
        source += ['gpgs_init_ios.cpp']
        source += ['gpgs_interface.cpp']
        source += ['gpgs_impl_native.cpp']
    else:
        source += ['gpg_null.cpp']

    gpgsext = bld.new_task_gen(features = 'cxx cstaticlib embed ddf',
                              includes = ['.', '../proto'],
                              source = source,
                              proto_gen_py = True,
                              proto_gen_cc = True,
                              protoc_includes = '../proto',
                              target = 'gpgsext')


    bld.new_task_gen(source = 'gpgs.h',
                     target = 'gpgs_doc.sdoc',
                     rule = '${SCRIPT_DOC} ${SRC} ${TGT}')

    bld.new_task_gen(source = 'gpgs.h',
                     target = 'gpgs_doc.json',
                     rule = '${SCRIPT_DOC} ${SRC} -t json ${TGT}')

    bld.install_files('${PREFIX}/share/doc', 'gpgs_doc.sdoc')
    bld.install_files('${PREFIX}/share/doc', 'gpgs_doc.json')
