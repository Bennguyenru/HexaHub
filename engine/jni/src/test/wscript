#! /usr/bin/env python

import sys, os
import waf_dynamo

# different paths depending on which folder you're running it from
sys.path.insert(0, "scripts")
sys.path.insert(0, "../scripts")
sys.path.insert(0, "../../scripts")

import gen_java

def options(opt):
    opt.load('waf_dynamo')

def configure(conf):
    conf.load('waf_dynamo')
    conf.load('java')

    conf.env['STLIB_DLIB_NOASAN'] = ['dlib_noasan']

    includes = [os.getcwd()]

    def make_path(path):
        cwd = os.getcwd()
        script_dir = conf.path.abspath()
        return os.path.relpath(os.path.normpath(os.path.join(script_dir, path)), cwd)

    gen_java.generate(header_path   = make_path('./testapi.h'),
                     namespace      = 'dmJniTest',
                     package_name   = 'com.dynamo.bob.pipeline',
                     includes       = includes,
                     java_outdir    = make_path('./java'),
                     jni_outdir     = make_path('./jni'))

def build(bld):
    bld.load('java')

    bld.shlib(features = 'c cxx skip_asan',
               includes = ['.', '..', './jni'],
               source   = bld.path.ant_glob('**/*.cpp'),
               use      = 'jni_noasan DLIB_NOASAN PROFILE_NULL_NOASAN JDK',
               target   = 'test_jni_shared')

    classpath = ['%s/ext/share/java/junit-4.6.jar' % bld.env.DYNAMO_HOME]
    classpath = os.pathsep.join(classpath)

    bld(features='javac seq',
        classpath=classpath,
        srcdir='java',
        outdir='java')

    bld.env["JAVACFLAGS"] = '-g'.split()

    bld(features='jar seq test',
        basedir ='java',
        destfile ='test_jni.jar',
        name = 'test_jni',
        classpath=classpath,
        mainclass='com.dynamo.bob.pipeline.JniTest')
