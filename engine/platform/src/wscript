#! /usr/bin/env python
import waflib.Options
from waf_dynamo import platform_glfw_version

def configure(conf):
    pass

def build(bld):

    extra_source = ['platform_window_vulkan_stub.cpp']
    glfw_source = ['platform_window_glfw.cpp']
    glfw_defines = []

    if platform_glfw_version(bld.env.PLATFORM) == 3:
        glfw_source = ['platform_window_glfw3.cpp']

        if waflib.Options.options.with_vulkan:
            glfw_source.append('platform_window_glfw3_vulkan.cpp')

    lib = bld.stlib(features = 'cxx c ddf',
                    includes = '.',
                    target   = 'platform',
                    defines  = glfw_defines,
                    source   = bld.path.ant_glob(glfw_source))

    lib = bld.stlib(features = 'cxx c ddf',
                    includes = '.',
                    target   = 'platform_null',
                    source   = bld.path.ant_glob(['platform_window_null.cpp']))

    bld.add_group()

    bld.install_files('${PREFIX}/include/platform', 'platform_window.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_constants.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_vulkan.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_opengl.h')

    if not waflib.Options.options.skip_build_tests:
        bld.recurse('test')
