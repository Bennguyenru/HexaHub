diff -ruw '--exclude=.git' repo_a/src/lj_alloc.c repo_b/src/lj_alloc.c
--- repo_a/src/lj_alloc.c	2022-11-06 09:31:19.625293600 +0100
+++ repo_b/src/lj_alloc.c	2022-11-06 09:31:26.716228300 +0100
@@ -36,7 +36,7 @@
 #ifndef LUAJIT_USE_SYSMALLOC
 
 #define MAX_SIZE_T		(~(size_t)0)
-#define MALLOC_ALIGNMENT	((size_t)8U)
+#define MALLOC_ALIGNMENT	((size_t)16U)
 
 #define DEFAULT_GRANULARITY	((size_t)128U * (size_t)1024U)
 #define DEFAULT_TRIM_THRESHOLD	((size_t)2U * (size_t)1024U * (size_t)1024U)
diff -ruw '--exclude=.git' repo_a/src/lj_jit.h repo_b/src/lj_jit.h
--- repo_a/src/lj_jit.h	2022-11-06 09:31:19.660296100 +0100
+++ repo_b/src/lj_jit.h	2022-11-06 09:31:26.718221000 +0100
@@ -447,11 +447,11 @@
   int32_t retdepth;	/* Return frame depth (count of RETF). */
 
 #if LJ_K32__USED
-  uint32_t k32[LJ_K32__MAX];  /* Common 4 byte constants used by backends. */
+  uint32_t k32[LJ_K32__MAX+1];  /* Common 4 byte constants used by backends. */
 #endif
   TValue ksimd[LJ_KSIMD__MAX*2+1];  /* 16 byte aligned SIMD constants. */
 #if LJ_K64__USED
-  TValue k64[LJ_K64__MAX];  /* Common 8 byte constants. */
+  TValue k64[LJ_K64__MAX+1];  /* Common 8 byte constants. */
 #endif
 
   IRIns *irbuf;		/* Temp. IR instruction buffer. Biased with REF_BIAS. */
diff -ruw '--exclude=.git' repo_a/src/lj_obj.h repo_b/src/lj_obj.h
--- repo_a/src/lj_obj.h	2022-11-06 09:31:19.665294400 +0100
+++ repo_b/src/lj_obj.h	2022-11-06 09:31:26.718221000 +0100
@@ -320,16 +320,23 @@
 /* -- Userdata object ----------------------------------------------------- */
 
 /* Userdata object. Payload follows. */
-typedef struct GCudata {
+typedef struct LJ_ALIGN(16) GCudata {
   GCHeader;
   uint8_t udtype;	/* Userdata type. */
   uint8_t unused2;
   GCRef env;		/* Should be at same offset in GCfunc. */
   MSize len;		/* Size of payload. */
   GCRef metatable;	/* Must be at same offset in GCtab. */
-  uint32_t align1;	/* To force 8 byte alignment of the payload. */
+
+  uint32_t align0;      /* To force 8 byte alignment of the payload. */
+  #ifndef LJ_GC64
+      uint64_t align1;/* To force 16 byte alignment of the payload. */
+  #endif
+
 } GCudata;
 
+LJ_STATIC_ASSERT((sizeof(GCudata) % 16) == 0);
+
 /* Userdata types. */
 enum {
   UDTYPE_USERDATA,	/* Regular userdata. */
