diff -ruw --exclude=.git repo_a/src/Makefile repo_b/src/Makefile
--- repo_a/src/Makefile	2023-06-27 09:57:32
+++ repo_b/src/Makefile	2023-06-27 09:57:36
@@ -71,10 +71,10 @@
 # as dynamic mode.
 #
 # Mixed mode creates a static + dynamic library and a statically linked luajit.
-BUILDMODE= mixed
+#BUILDMODE= mixed
 #
 # Static mode creates a static library and a statically linked luajit.
-#BUILDMODE= static
+BUILDMODE= static
 #
 # Dynamic mode creates a dynamic library and a dynamically linked luajit.
 # Note: this executable will only run when the library is installed!
@@ -320,7 +320,7 @@
     $(error missing: export MACOSX_DEPLOYMENT_TARGET=XX.YY)
   endif
   TARGET_STRIP+= -x
-  TARGET_XCFLAGS+= -DLUAJIT_UNWIND_EXTERNAL
+  TARGET_XCFLAGS+= -DLUAJIT_UNWIND_INTERNAL
   TARGET_XSHLDFLAGS= -dynamiclib -single_module -undefined dynamic_lookup -fPIC
   TARGET_DYNXLDOPTS=
   TARGET_XSHLDFLAGS+= -install_name $(TARGET_DYLIBPATH) -compatibility_version $(MAJVER).$(MINVER) -current_version $(MAJVER).$(MINVER).$(RELVER)
diff -ruw --exclude=.git repo_a/src/jit/bcsave.lua repo_b/src/jit/bcsave.lua
--- repo_a/src/jit/bcsave.lua	2023-06-27 09:57:32
+++ repo_b/src/jit/bcsave.lua	2023-06-27 09:57:36
@@ -702,4 +702,3 @@
 return {
   start = docmd -- Process -b command line option.
 }
-
diff -ruw --exclude=.git repo_a/src/lj_alloc.c repo_b/src/lj_alloc.c
--- repo_a/src/lj_alloc.c	2023-06-27 09:57:32
+++ repo_b/src/lj_alloc.c	2023-06-27 09:57:36
@@ -36,7 +36,7 @@
 #ifndef LUAJIT_USE_SYSMALLOC
 
 #define MAX_SIZE_T		(~(size_t)0)
-#define MALLOC_ALIGNMENT	((size_t)8U)
+#define MALLOC_ALIGNMENT	((size_t)16U)
 
 #define DEFAULT_GRANULARITY	((size_t)128U * (size_t)1024U)
 #define DEFAULT_TRIM_THRESHOLD	((size_t)2U * (size_t)1024U * (size_t)1024U)
diff -ruw --exclude=.git repo_a/src/lj_err.c repo_b/src/lj_err.c
--- repo_a/src/lj_err.c	2023-06-27 09:57:32
+++ repo_b/src/lj_err.c	2023-06-27 09:57:36
@@ -777,6 +777,7 @@
 {
   if (L->status == LUA_ERRERR+1)  /* Don't touch the stack during lua_open. */
     lj_vm_unwind_c(L->cframe, LUA_ERRMEM);
+  if (curr_funcisL(L)) L->top = curr_topL(L);
   setstrV(L, L->top++, lj_err_str(L, LJ_ERR_ERRMEM));
   lj_err_throw(L, LUA_ERRMEM);
 }
diff -ruw --exclude=.git repo_a/src/lj_jit.h repo_b/src/lj_jit.h
--- repo_a/src/lj_jit.h	2023-06-27 09:57:32
+++ repo_b/src/lj_jit.h	2023-06-27 09:57:36
@@ -447,11 +447,11 @@
   int32_t retdepth;	/* Return frame depth (count of RETF). */
 
 #if LJ_K32__USED
-  uint32_t k32[LJ_K32__MAX];  /* Common 4 byte constants used by backends. */
+  uint32_t k32[LJ_K32__MAX+1];  /* Common 4 byte constants used by backends. */
 #endif
   TValue ksimd[LJ_KSIMD__MAX*2+1];  /* 16 byte aligned SIMD constants. */
 #if LJ_K64__USED
-  TValue k64[LJ_K64__MAX];  /* Common 8 byte constants. */
+  TValue k64[LJ_K64__MAX+1];  /* Common 8 byte constants. */
 #endif
 
   IRIns *irbuf;		/* Temp. IR instruction buffer. Biased with REF_BIAS. */
diff -ruw --exclude=.git repo_a/src/lj_obj.h repo_b/src/lj_obj.h
--- repo_a/src/lj_obj.h	2023-06-27 09:57:32
+++ repo_b/src/lj_obj.h	2023-06-27 09:57:36
@@ -320,15 +320,22 @@
 /* -- Userdata object ----------------------------------------------------- */
 
 /* Userdata object. Payload follows. */
-typedef struct GCudata {
+typedef struct LJ_ALIGN(16) GCudata {
   GCHeader;
   uint8_t udtype;	/* Userdata type. */
   uint8_t unused2;
   GCRef env;		/* Should be at same offset in GCfunc. */
   MSize len;		/* Size of payload. */
   GCRef metatable;	/* Must be at same offset in GCtab. */
-  uint32_t align1;	/* To force 8 byte alignment of the payload. */
+
+  uint32_t align0;      /* To force 8 byte alignment of the payload. */
+  #ifndef LJ_GC64
+      uint64_t align1;/* To force 16 byte alignment of the payload. */
+  #endif
+
 } GCudata;
+
+LJ_STATIC_ASSERT((sizeof(GCudata) % 16) == 0);
 
 /* Userdata types. */
 enum {
diff -ruw --exclude=.git repo_a/src/nxbuild.bat repo_b/src/nxbuild.bat
--- repo_a/src/nxbuild.bat	2023-06-27 09:57:32
+++ repo_b/src/nxbuild.bat	2023-06-27 09:57:36
@@ -121,6 +121,7 @@
 @set TARGETLIB=libluajit_%TARGETLIB_SUFFIX%.a
 :BUILD
 del %TARGETLIB%
+@set LJCOMPILE=%LJCOMPILE% %TARGET_CFLAGS%
 @if "%1" neq "noamalg" goto :AMALG
 for %%f in (lj_*.c lib_*.c) do (
   %LJCOMPILE% %%f
diff -ruw --exclude=.git repo_a/src/ps4build.bat repo_b/src/ps4build.bat
--- repo_a/src/ps4build.bat	2023-06-27 09:57:32
+++ repo_b/src/ps4build.bat	2023-06-27 09:57:36
@@ -78,7 +78,7 @@
 @set LJLIB="%SCE_ORBIS_SDK_DIR%\host_tools\bin\orbis-ar" rcus
 @set INCLUDE=""
 
-orbis-as -o lj_vm.o lj_vm.s
+"%SCE_ORBIS_SDK_DIR%\host_tools\bin\orbis-as" -o lj_vm.o lj_vm.s
 
 @if "%1" neq "debug" goto :NODEBUG
 @shift
diff -ruw --exclude=.git repo_a/src/ps5build.bat repo_b/src/ps5build.bat
--- repo_a/src/ps5build.bat	2023-06-27 09:57:32
+++ repo_b/src/ps5build.bat	2023-06-27 09:57:36
@@ -74,11 +74,11 @@
 @if errorlevel 1 goto :BAD
 
 @rem ---- Cross compiler ----
-@set LJCOMPILE="%SCE_PROSPERO_SDK_DIR%\host_tools\bin\prospero-clang" -c -Wall -DLUAJIT_DISABLE_FFI %GC64%
+@set LJCOMPILE="%SCE_PROSPERO_SDK_DIR%\host_tools\bin\prospero-clang" -c -Wall -DLUAJIT_DISABLE_FFI -DLUAJIT_USE_SYSMALLOC %GC64%
 @set LJLIB="%SCE_PROSPERO_SDK_DIR%\host_tools\bin\prospero-llvm-ar" rcus
 @set INCLUDE=""
 
-%SCE_PROSPERO_SDK_DIR%\host_tools\bin\prospero-llvm-as -o lj_vm.o lj_vm.s
+"%SCE_PROSPERO_SDK_DIR%\host_tools\bin\prospero-clang" -c -o lj_vm.o lj_vm.s
 
 @if "%1" neq "debug" goto :NODEBUG
 @shift
