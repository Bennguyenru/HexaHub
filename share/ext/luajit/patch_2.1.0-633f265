diff -ruw --exclude=.git repo_a/src/jit/bcsave.lua repo_b/src/jit/bcsave.lua
--- repo_a/src/jit/bcsave.lua	2022-08-12 16:13:36.000000000 +0200
+++ repo_b/src/jit/bcsave.lua	2022-08-12 15:12:52.000000000 +0200
@@ -29,6 +29,7 @@
   -l        Only list bytecode.
   -s        Strip debug info (default).
   -g        Keep debug info.
+  -f        Set custom file name (passed to loadstring. default: input filename)
   -n name   Set module name (default: auto-detect from input name).
   -t type   Set output file type (default: auto-detect from output name).
   -a arch   Override architecture for object files (default: native).
@@ -49,10 +50,13 @@
   os.exit(1)
 end
 
-local function readfile(input)
+local function readfile(input, filename)
   if type(input) == "function" then return input end
   if input == "-" then input = nil end
-  return check(loadfile(input))
+  local f = assert(io.open(input, "r"))
+  local src = f:read("*all")
+  f:close()
+  return check(loadstring(src, filename))
 end
 
 local function savefile(name, mode)
@@ -604,13 +608,13 @@
 
 ------------------------------------------------------------------------------
 
-local function bclist(input, output)
-  local f = readfile(input)
+local function bclist(input, output, filename)
+  local f = readfile(input, filename)
   require("jit.bc").dump(f, savefile(output, "w"), true)
 end
 
-local function bcsave(ctx, input, output)
-  local f = readfile(input)
+local function bcsave(ctx, input, output, filename)
+  local f = readfile(input, filename)
   local s = string.dump(f, ctx.strip)
   local t = ctx.type
   if not t then
@@ -633,6 +637,7 @@
   local arg = {...}
   local n = 1
   local list = false
+  local filename = nil
   local ctx = {
     strip = true, arch = jit.arch, os = jit.os:lower(),
     type = false, modname = false,
@@ -663,6 +668,8 @@
 	    ctx.arch = checkarg(tremove(arg, n), map_arch, "architecture")
 	  elseif opt == "o" then
 	    ctx.os = checkarg(tremove(arg, n), map_os, "OS name")
+	  elseif opt == "f" then
+	    filename = tremove(arg, n)
 	  else
 	    usage()
 	  end
@@ -674,10 +681,10 @@
   end
   if list then
     if #arg == 0 or #arg > 2 then usage() end
-    bclist(arg[1], arg[2] or "-")
+    bclist(arg[1], arg[2] or "-", filename or arg[1])
   else
     if #arg ~= 2 then usage() end
-    bcsave(ctx, arg[1], arg[2])
+    bcsave(ctx, arg[1], arg[2], filename or arg[1])
   end
 end
 
diff -ruw --exclude=.git repo_a/src/lj_obj.h repo_b/src/lj_obj.h
--- repo_a/src/lj_obj.h	2022-08-12 16:13:36.000000000 +0200
+++ repo_b/src/lj_obj.h	2022-08-12 15:12:52.000000000 +0200
@@ -320,16 +320,27 @@
 /* -- Userdata object ----------------------------------------------------- */
 
 /* Userdata object. Payload follows. */
-typedef struct GCudata {
+typedef struct LJ_ALIGN(LUA_USERDATA_ALIGNMENT) GCudata {
   GCHeader;
   uint8_t udtype;	/* Userdata type. */
   uint8_t unused2;
   GCRef env;		/* Should be at same offset in GCfunc. */
   MSize len;		/* Size of payload. */
   GCRef metatable;	/* Must be at same offset in GCtab. */
-  uint32_t align1;	/* To force 8 byte alignment of the payload. */
+
+  uint32_t align0;      /* To force 8 byte alignment of the payload. */
+#if LUA_USERDATA_ALIGNMENT == 16
+    #ifndef LJ_GC64
+        uint64_t align1;/* To force 16 byte alignment of the payload. */
+    #endif
+#endif
+
 } GCudata;
 
+#undef LUA_STRUCT_ALIGNED
+
+LJ_STATIC_ASSERT((sizeof(GCudata) % LUA_USERDATA_ALIGNMENT) == 0);
+
 /* Userdata types. */
 enum {
   UDTYPE_USERDATA,	/* Regular userdata. */
diff -ruw --exclude=.git repo_a/src/luaconf.h repo_b/src/luaconf.h
--- repo_a/src/luaconf.h	2022-08-12 16:13:36.000000000 +0200
+++ repo_b/src/luaconf.h	2022-08-12 15:12:52.000000000 +0200
@@ -123,6 +123,16 @@
 #define LUA_INTFRMLEN		"l"
 #define LUA_INTFRM_T		long
 
+/* Allows for aligning the userdata struct. Valid values are 8 or 16. Default is 8.
+*/
+#if !defined(LUA_USERDATA_ALIGNMENT)
+  #define LUA_USERDATA_ALIGNMENT 16
+#endif
+
+#if !(LUA_USERDATA_ALIGNMENT == 8 || LUA_USERDATA_ALIGNMENT == 16)
+#error "Invalid LUA_USERDATA_ALIGNMENT (valid values are 8 or 16)"
+#endif
+
 /* Linkage of public API functions. */
 #if defined(LUA_BUILD_AS_DLL)
 #if defined(LUA_CORE) || defined(LUA_LIB)
