diff --git a/Makefile b/Makefile
index aa1b84bd7..7731a81a1 100644
--- a/Makefile
+++ b/Makefile
@@ -44,7 +44,7 @@ INSTALL_CMOD= $(INSTALL_CMODD)/$(ABIVER)
 INSTALL_MAN= $(INSTALL_SHARE)/man/man1
 INSTALL_PKGCONFIG= $(INSTALL_LIB)/pkgconfig
 
-INSTALL_TNAME= luajit-$(VERSION)
+INSTALL_TNAME= luajit-$(VERSION)-$(DEFOLD_ARCH)
 INSTALL_TSYMNAME= luajit
 INSTALL_ANAME= libluajit-$(ABIVER).a
 INSTALL_SOSHORT1= libluajit-$(ABIVER).so
@@ -60,7 +60,7 @@ INSTALL_DYN= $(INSTALL_LIB)/$(INSTALL_SONAME)
 INSTALL_SHORT1= $(INSTALL_LIB)/$(INSTALL_SOSHORT1)
 INSTALL_SHORT2= $(INSTALL_LIB)/$(INSTALL_SOSHORT2)
 INSTALL_T= $(INSTALL_BIN)/$(INSTALL_TNAME)
-INSTALL_TSYM= $(INSTALL_BIN)/$(INSTALL_TSYMNAME)
+INSTALL_TSYM= $(INSTALL_BIN)/$(INSTALL_TSYMNAME)-$(DEFOLD_ARCH)
 INSTALL_PC= $(INSTALL_PKGCONFIG)/$(INSTALL_PCNAME)
 
 INSTALL_DIRS= $(INSTALL_BIN) $(INSTALL_LIB) $(INSTALL_INC) $(INSTALL_MAN) \
@@ -109,7 +109,7 @@ endif
 INSTALL_DEP= src/luajit
 
 default all $(INSTALL_DEP):
-	@echo "==== Building LuaJIT $(VERSION) ===="
+	@echo "==== Building LuaJIT $(VERSION) with TARGET_SYS: '$(TARGET_SYS)' on host"
 	$(MAKE) -C src
 	@echo "==== Successfully built LuaJIT $(VERSION) ===="
 
@@ -130,12 +130,15 @@ install: $(INSTALL_DEP)
 	  $(RM) $(FILE_PC).tmp
 	cd src && $(INSTALL_F) $(FILES_INC) $(INSTALL_INC)
 	cd src/jit && $(INSTALL_F) $(FILES_JITLIB) $(INSTALL_JITLIB)
+	$(SYMLINK) $(INSTALL_TNAME) $(INSTALL_TSYM)
 	@echo "==== Successfully installed LuaJIT $(VERSION) to $(PREFIX) ===="
+	@echo "SKIP_BIN_INSTALL: ${SKIP_BIN_INSTALL}" # If we should install (output) anything in the /bin/ dir.
+	@echo "INSTALL_BIN: ${INSTALL_BIN}"
+	@echo "INSTALL_TNAME: ${INSTALL_TNAME}"
+	@echo "INSTALL_TSYMNAME: ${INSTALL_TSYMNAME}"
+	@echo "INSTALL_TSYM: ${INSTALL_TSYM}"
 	@echo ""
-	@echo "Note: the development releases deliberately do NOT install a symlink for luajit"
-	@echo "You can do this now by running this command (with sudo):"
-	@echo ""
-	@echo "  $(SYMLINK) $(INSTALL_TNAME) $(INSTALL_TSYM)"
+	@echo "Note: the development releases installs a symlink for luajit"
 	@echo ""
 
 
diff --git a/src/Makefile b/src/Makefile
index 2538503f9..a30b16f17 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -205,14 +205,20 @@ HOST_ACFLAGS= $(CCOPTIONS) $(HOST_XCFLAGS) $(TARGET_ARCH) $(HOST_CFLAGS)
 HOST_ALDFLAGS= $(LDOPTIONS) $(HOST_XLDFLAGS) $(HOST_LDFLAGS)
 HOST_ALIBS= $(HOST_XLIBS) $(LIBS) $(HOST_LIBS)
 
+# missing from the original make file
+DEFAULT_AR = ar
+AR= $(DEFAULT_AR)
+DEFAULT_STRIP = strip
+STRIP= $(DEFAULT_STRIP)
+
 STATIC_CC = $(CROSS)$(CC)
 DYNAMIC_CC = $(CROSS)$(CC) -fPIC
 TARGET_CC= $(STATIC_CC)
 TARGET_STCC= $(STATIC_CC)
 TARGET_DYNCC= $(DYNAMIC_CC)
 TARGET_LD= $(CROSS)$(CC)
-TARGET_AR= $(CROSS)ar rcus
-TARGET_STRIP= $(CROSS)strip
+TARGET_AR= $(CROSS)$(AR) rcus
+TARGET_STRIP= $(CROSS)$(STRIP)
 
 TARGET_LIBPATH= $(or $(PREFIX),/usr/local)/$(or $(MULTILIB),lib)
 TARGET_SONAME= libluajit-$(ABIVER).so.$(MAJVER)
@@ -534,7 +540,7 @@ ifeq (Windows,$(TARGET_SYS))
   TARGET_DYNCC= $(STATIC_CC)
   LJVM_MODE= peobj
   LJVM_BOUT= $(LJVM_O)
-  LUAJIT_T= luajit.exe
+  LUAJIT_T= luajit-$(DEFOLD_ARCH).exe
   ifeq (cygwin,$(HOST_MSYS))
     LUAJIT_SO= cyg$(TARGET_DLLNAME)
   else
@@ -639,16 +645,24 @@ depend:
 
 $(MINILUA_T): $(MINILUA_O)
 	$(E) "HOSTLINK  $@"
+	$(E) "TARGET_LJARCH=$(TARGET_LJARCH)"
+	$(E) "DASM_ARCH=$(DASM_ARCH)"
+	$(E) "CFLAGS=$(CFLAGS)"
+	$(E) "HOST_CFLAGS=$(HOST_CFLAGS)"
+	$(E) "TARGET_CFLAGS=$(TARGET_CFLAGS)"
+	$(E) "TARGET_FLAGS=$(TARGET_FLAGS)"
+	$(E) $(Q)$(HOST_CC) $(HOST_ALDFLAGS) -o $@ $(MINILUA_O) $(MINILUA_LIBS) $(HOST_ALIBS)
 	$(Q)$(HOST_CC) $(HOST_ALDFLAGS) -o $@ $(MINILUA_O) $(MINILUA_LIBS) $(HOST_ALIBS)
 
 host/buildvm_arch.h: $(DASM_DASC) $(DASM_DEP) $(DASM_DIR)/*.lua lj_arch.h lua.h luaconf.h
-	$(E) "DYNASM    $@"
+	$(E) "DYNASM    $@ using $(DASM_DASC)"
 	$(Q)$(DASM) $(DASM_FLAGS) -o $@ $(DASM_DASC)
 
 host/buildvm.o: $(DASM_DIR)/dasm_*.h
 
 $(BUILDVM_T): $(BUILDVM_O)
 	$(E) "HOSTLINK  $@"
+	$(E) $(Q)$(HOST_CC) $(HOST_ALDFLAGS) -o $@ $(BUILDVM_O) $(HOST_ALIBS)
 	$(Q)$(HOST_CC) $(HOST_ALDFLAGS) -o $@ $(BUILDVM_O) $(HOST_ALIBS)
 
 $(LJVM_BOUT): $(BUILDVM_T)
@@ -686,6 +700,7 @@ lj_folddef.h: $(BUILDVM_T) lj_opt_fold.c
 %.o: %.c
 	$(E) "CC        $@"
 	$(Q)$(TARGET_DYNCC) $(TARGET_ACFLAGS) -c -o $(@:.o=_dyn.o) $<
+	$(E) $(Q)$(TARGET_CC) $(TARGET_ACFLAGS) -c -o $@ $<
 	$(Q)$(TARGET_CC) $(TARGET_ACFLAGS) -c -o $@ $<
 
 %.o: %.S
@@ -696,9 +711,11 @@ lj_folddef.h: $(BUILDVM_T) lj_opt_fold.c
 $(LUAJIT_O):
 	$(E) "CC        $@"
 	$(Q)$(TARGET_STCC) $(TARGET_ACFLAGS) -c -o $@ $<
+	$(E) $(Q)$(TARGET_STCC) $(TARGET_ACFLAGS) -c -o $@ $<
 
 $(HOST_O): %.o: %.c
 	$(E) "HOSTCC    $@"
+	$(E) $(Q)$(HOST_CC) $(HOST_ACFLAGS) -c -o $@ $<
 	$(Q)$(HOST_CC) $(HOST_ACFLAGS) -c -o $@ $<
 
 include Makefile.dep
@@ -709,6 +726,7 @@ include Makefile.dep
 
 $(LUAJIT_A): $(LJVMCORE_O)
 	$(E) "AR        $@"
+	$(E) $(Q)$(TARGET_AR) $@ $(LJVMCORE_O)
 	$(Q)$(TARGET_AR) $@ $(LJVMCORE_O)
 
 # The dependency on _O, but linking with _DYNO is intentional.
@@ -719,6 +737,7 @@ $(LUAJIT_SO): $(LJVMCORE_O)
 
 $(LUAJIT_T): $(TARGET_O) $(LUAJIT_O) $(TARGET_DEP)
 	$(E) "LINK      $@"
+	$(E) $(Q)$(TARGET_LD) $(TARGET_ALDFLAGS) -o $@ $(LUAJIT_O) $(TARGET_O) $(TARGET_ALIBS)
 	$(Q)$(TARGET_LD) $(TARGET_ALDFLAGS) -o $@ $(LUAJIT_O) $(TARGET_O) $(TARGET_ALIBS)
 	$(Q)$(TARGET_STRIP) $@
 	$(E) "OK        Successfully built LuaJIT"
diff --git a/src/jit/bcsave.lua b/src/jit/bcsave.lua
index ab13667a9..6fb0ef569 100644
--- a/src/jit/bcsave.lua
+++ b/src/jit/bcsave.lua
@@ -29,6 +29,7 @@ Save LuaJIT bytecode: luajit -b[options] input output
   -l        Only list bytecode.
   -s        Strip debug info (default).
   -g        Keep debug info.
+  -f        Set file name passed to loadfile
   -n name   Set module name (default: auto-detect from input name).
   -t type   Set output file type (default: auto-detect from output name).
   -a arch   Override architecture for object files (default: native).
@@ -49,10 +50,13 @@ local function check(ok, ...)
   os.exit(1)
 end
 
-local function readfile(input)
+local function readfile(input, filename)
   if type(input) == "function" then return input end
   if input == "-" then input = nil end
-  return check(loadfile(input))
+  local f = assert(io.open(input, "r"))
+  local src = f:read("*all")
+  f:close()
+  return check(loadstring(src, filename))
 end
 
 local function savefile(name, mode)
@@ -579,13 +583,13 @@ end
 
 ------------------------------------------------------------------------------
 
-local function bclist(input, output)
-  local f = readfile(input)
+local function bclist(input, output, filename)
+  local f = readfile(input, filename)
   require("jit.bc").dump(f, savefile(output, "w"), true)
 end
 
-local function bcsave(ctx, input, output)
-  local f = readfile(input)
+local function bcsave(ctx, input, output, filename)
+  local f = readfile(input, filename)
   local s = string.dump(f, ctx.strip)
   local t = ctx.type
   if not t then
@@ -608,6 +612,7 @@ local function docmd(...)
   local arg = {...}
   local n = 1
   local list = false
+  local filename = nil
   local ctx = {
     strip = true, arch = jit.arch, os = jit.os:lower(),
     type = false, modname = false,
@@ -638,6 +643,8 @@ local function docmd(...)
 	    ctx.arch = checkarg(tremove(arg, n), map_arch, "architecture")
 	  elseif opt == "o" then
 	    ctx.os = checkarg(tremove(arg, n), map_os, "OS name")
+    elseif opt == "f" then
+      filename = tremove(arg, n)
 	  else
 	    usage()
 	  end
@@ -649,10 +656,10 @@ local function docmd(...)
   end
   if list then
     if #arg == 0 or #arg > 2 then usage() end
-    bclist(arg[1], arg[2] or "-")
+    bclist(arg[1], arg[2] or "-", filename or arg[1])
   else
     if #arg ~= 2 then usage() end
-    bcsave(ctx, arg[1], arg[2])
+    bcsave(ctx, arg[1], arg[2], filename or arg[1])
   end
 end
 
diff --git a/src/lib_io.c b/src/lib_io.c
index 94d6f0a54..b7ee69d7c 100644
--- a/src/lib_io.c
+++ b/src/lib_io.c
@@ -431,7 +431,7 @@ LJLIB_CF(io_popen)
 LJLIB_CF(io_tmpfile)
 {
   IOFileUD *iof = io_file_new(L);
-#if LJ_TARGET_PS3 || LJ_TARGET_PS4 || LJ_TARGET_PSVITA
+#if LJ_TARGET_PS3 || LJ_TARGET_PS4 || LJ_TARGET_PSVITA || LJ_TARGET_NX
   iof->fp = NULL; errno = ENOSYS;
 #else
   iof->fp = tmpfile();
diff --git a/src/lib_os.c b/src/lib_os.c
index f19b831c7..56bda9f94 100644
--- a/src/lib_os.c
+++ b/src/lib_os.c
@@ -76,7 +76,7 @@ LJLIB_CF(os_rename)
 
 LJLIB_CF(os_tmpname)
 {
-#if LJ_TARGET_PS3 || LJ_TARGET_PS4 || LJ_TARGET_PSVITA
+#if LJ_TARGET_PS3 || LJ_TARGET_PS4 || LJ_TARGET_PSVITA || LJ_TARGET_NX
   lj_err_caller(L, LJ_ERR_OSUNIQF);
   return 0;
 #else
diff --git a/src/lj_alloc.c b/src/lj_alloc.c
index 165203fad..bf0d3c7a0 100644
--- a/src/lj_alloc.c
+++ b/src/lj_alloc.c
@@ -36,7 +36,7 @@
 #ifndef LUAJIT_USE_SYSMALLOC
 
 #define MAX_SIZE_T		(~(size_t)0)
-#define MALLOC_ALIGNMENT	((size_t)8U)
+#define MALLOC_ALIGNMENT	((size_t)16U)
 
 #define DEFAULT_GRANULARITY	((size_t)128U * (size_t)1024U)
 #define DEFAULT_TRIM_THRESHOLD	((size_t)2U * (size_t)1024U * (size_t)1024U)
diff --git a/src/lj_arch.h b/src/lj_arch.h
index ae9994676..d4888b4cb 100644
--- a/src/lj_arch.h
+++ b/src/lj_arch.h
@@ -68,7 +68,6 @@
 #else
 #error "No support for this architecture (yet)"
 #endif
-
 #endif
 
 /* Select native OS if no target OS defined. */
diff --git a/src/lj_obj.h b/src/lj_obj.h
index 5547a79b5..2bbc95354 100644
--- a/src/lj_obj.h
+++ b/src/lj_obj.h
@@ -316,15 +316,24 @@ typedef struct GCstr {
 
 /* -- Userdata object ----------------------------------------------------- */
 
+#if defined(__GNUC__)
+#define DM_ALIGNED(a) __attribute__ ((aligned (a)))
+#elif defined(_MSC_VER)
+#define DM_ALIGNED(a) __declspec(align(a))
+#else
+#error "Unsupported compiler"
+#endif
+
 /* Userdata object. Payload follows. */
-typedef struct GCudata {
+typedef struct DM_ALIGNED(16) GCudata {
   GCHeader;
   uint8_t udtype;	/* Userdata type. */
   uint8_t unused2;
   GCRef env;		/* Should be at same offset in GCfunc. */
   MSize len;		/* Size of payload. */
   GCRef metatable;	/* Must be at same offset in GCtab. */
-  uint32_t align1;	/* To force 8 byte alignment of the payload. */
+  uint32_t align0;	/* To force 8 byte alignment of the payload. */
+  uint64_t align1; /* ^ */
 } GCudata;
 
 /* Userdata types. */
