apply plugin: 'java'

repositories {
    maven {
        url "https://maven.google.com/"
    }
    mavenCentral()
}

dependencies {
    compile 'com.google.firebase:firebase-messaging:17.3.4'
    compile 'com.google.firebase:firebase-core:16.0.7'
    compile 'com.google.gms:google-services:4.2.0'
}

def resultDirectory = "${project.buildDir}/result"
def packedDirectory = "${resultDirectory}/packed"
def unpackedDirectory = "${resultDirectory}/unpacked"
def unpackedClassesDirectory = "${unpackedDirectory}/classes"
def packageOutputDirectory = "${project.buildDir}/package"
def packageDirectory = "${packageOutputDirectory}/share/java"

task copyArtifacts() {
    outputs.dir packedDirectory

    project.configurations.runtime.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        println "${artifact.moduleVersion.id.group}.${artifact.name}-${artifact.moduleVersion.id.version}.${artifact.extension}"
        copy {
            from artifact.file
            into packedDirectory
            rename "(.*)", "${artifact.moduleVersion.id.group}.${artifact.name}-${artifact.moduleVersion.id.version}.${artifact.extension}"
        }
    }
}

task unzipJars(dependsOn: copyArtifacts) {
    inputs.dir packedDirectory
    outputs.dir unpackedClassesDirectory

    doLast {
        println('*** Unzip jars')
        fileTree(dir: packedDirectory).include('*.jar').each { lib ->
            copy {
                println "Unzip $lib.name"
                from zipTree(lib)
                into unpackedClassesDirectory
                exclude 'META-INF/'
                exclude 'NOTICE.txt'
            }
        }
    }
}

task unzipAars(dependsOn: unzipJars) {
    inputs.dir packedDirectory
    outputs.dir unpackedClassesDirectory

    doLast {
        println('*** Unzip aars')
        fileTree(dir: packedDirectory).include('*.aar').each { lib ->
            copy {
                println "Unzip $lib.name"
                def dirName = lib.name - '.aar'
                from zipTree(lib)
                into "${packedDirectory}/aar/${dirName}"
            }
        }
        println('*** Unzip jars from aars')
        fileTree(dir: "${packedDirectory}/aar").include('**/*.jar').each { lib ->
            copy {
                println "Unzip $lib.name"
                from zipTree(lib)
                into unpackedClassesDirectory
                exclude 'META-INF/'
            }
        }
    }
}

task zipClasses(dependsOn: unzipAars, type: Zip) {
    from unpackedClassesDirectory
    archiveName 'firebase-14.3.4.jar'
    destinationDir file("${packageDirectory}")
}

task createDefoldPackage(dependsOn: zipClasses, type: Tar) {
    from packageOutputDirectory
    archiveName 'firebase-14.3.4-armv7-android.tar.gz'
    compression = Compression.GZIP
    destinationDir file("./")
}

build.dependsOn createDefoldPackage

clean {
    delete "${project.buildDir}"
}
