
Ýacquire_camera_focus3makes the receiving camera become the active camera"æ<p>
Post this message to a camera-component to activate it.
</p>
<p>
Several cameras can be active at the same time, but only the camera that was last activated will be used for rendering.
When the camera is deactivated (see <code>release_camera_focus</code>), the previously activated camera will again be used for rendering automatically.
</p>
<p>
The reason it is called "camera focus" is the similarity to how acquiring input focus works (see <code>acquire_input_focus</code>).
</p>:¤<p>
In the examples, it is assumed that the instance of the script has a camera-component with id "camera".
<pre>
msg.post("#camera", "acquire_camera_focus")
</pre>
Ãrelease_camera_focus deactivates the receiving camera"ß<p>
Post this message to a camera-component to deactivate it. The camera is then removed from the active cameras.
See <code>acquire_camera_focus</code> for more information how the active cameras are used in rendering.
</p>:¤<p>
In the examples, it is assumed that the instance of the script has a camera-component with id "camera".
<pre>
msg.post("#camera", "release_camera_focus")
</pre>
´
set_camerasets camera properties"S<p>
Post this message to a camera-component to set its properties at run-time.
</p>2D
aspect_ratio4Aspect ratio of the screen (width divided by height)2a
fovZField of view of the lens, measured as the angle between the right and left edge (radians)2U
near_zKPosition of the near clipping plane (distance from camera along relative z)2S
far_zJPosition of the far clipping plane (distance from camera along relative z):á<p>
In the examples, it is assumed that the instance of the script has a camera-component with id "camera".
<pre>
msg.post("#camera", "set_camera", {aspect_ratio = 16/9, fov = math.pi * 0.5, near_z = 0.1, far_z = 500})
</pre>c
cameraCameraCamera API documentation"7Messages to control camera components and camera focus.