name: CI - Main

on:
  push:
     branches:
       - '*'
       - '!DEFEDIT-*'
  repository_dispatch: {}

env: {
    S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }},
    S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }},
    NOTARIZATION_USERNAME: ${{ secrets.NOTARIZATION_USERNAME }},
    NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }},
    NOTARIZATION_ITC_PROVIDER: ${{ secrets.NOTARIZATION_ITC_PROVIDER }},
    DM_PACKAGES_URL: ${{ secrets.DM_PACKAGES_URL }},
    MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }},
    MACOS_CERTIFICATE_PASS: ${{ secrets.MACOS_CERTIFICATE_PASS }},
    BUILD_ENGINE: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || ((github.event_name == 'repository_dispatch') && (github.event.client_payload.skip_engine != true)) }},
    BUILD_BOB: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || ((github.event_name == 'repository_dispatch') && (github.event.client_payload.skip_bob != true)) }},
    BUILD_SDK: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || ((github.event_name == 'repository_dispatch') && (github.event.client_payload.skip_sdk != true)) }},
    BUILD_EDITOR: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || ((github.event_name == 'repository_dispatch') && (github.event.client_payload.skip_editor != true)) }}
}

jobs:
  dump:
    runs-on: ubuntu-16.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

# ---- BUILD ENGINE VERSIONS ------------------
  build-engine-windows:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [win32, x86_64-win32]
    runs-on: windows-2016
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', shell: bash, run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        shell: bash,
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive --skip-builtins --skip-docs engine'
      }]

  build-engine-macos:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [x86_64-darwin]
    runs-on: macOS-latest
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive --skip-builtins --skip-docs engine'
      }]

  build-engine-ios:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [armv7-darwin, arm64-darwin, x86_64-ios]
    runs-on: macOS-latest
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive --skip-tests --skip-builtins --skip-docs engine'
      }]

  build-engine-web:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [js-web, wasm-web]
    runs-on: ubuntu-18.04
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive --skip-tests --skip-builtins --skip-docs engine'
      }]

  build-engine-android:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [armv7-android, arm64-android]
    runs-on: ubuntu-18.04
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive --skip-tests --skip-builtins --skip-docs engine'
      }]

  build-engine-linux:
    if: env.BUILD_ENGINE == true
    strategy:
      matrix:
        platform: [x86_64-linux]
    runs-on: ubuntu-18.04
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build engine',
        run: 'ci/ci.sh --platform=${{ matrix.platform }} --branch=$GITHUB_REF --archive engine'
      }]

# ---- BUILD BOB AND SDK ------------------

  build-bob:
    if: env.BUILD_BOB == true
    needs: [build-engine-macos, build-engine-ios, build-engine-windows, build-engine-linux, build-engine-android, build-engine-web]
    runs-on: ubuntu-18.04
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build bob',
        run: 'ci/ci.sh --branch=$GITHUB_REF bob'
      }]

  build-sdk:
    if: env.BUILD_SDK == true
    needs: [build-engine-macos, build-engine-ios, build-engine-windows, build-engine-linux, build-engine-android, build-engine-web]
    runs-on: ubuntu-18.04
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 3 } },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install dependencies', run: 'ci/ci.sh install' },
      {
        name: 'Build SDK',
        run: 'ci/ci.sh --branch=$GITHUB_REF sdk'
      }]

# ---- BUILD EDITOR ------------------

  build-and-notarize-editor:
    if: env.BUILD_EDITOR == true
    needs: [build-bob]
    runs-on: macOS-latest
    steps: [
      { name: 'Checkout', uses: actions/checkout@v2, with: { fetch-depth: 0 } },
      { name: 'Fetch tags', run: 'git fetch --depth=1 origin +refs/tags/*:refs/tags/*' },
      { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
      { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
      { name: 'Install Leiningen', uses: DeLaGuardo/setup-clojure@master, with: { lein: 2.8.3 } },
      {
        name: 'Install dependencies',
        run: 'ci/ci.sh --keychain-cert="${MACOS_CERTIFICATE}" --keychain-cert-pass="${MACOS_CERTIFICATE_PASS}" install'
      },
      {
        name: 'Build editor',
        run: 'ci/ci.sh --branch=$GITHUB_REF build-editor'
      },
      {
        name: 'Notarize editor',
        run: 'ci/ci.sh --branch=$GITHUB_REF --notarization-username="${NOTARIZATION_USERNAME}" --notarization-password="${NOTARIZATION_PASSWORD}" --notarization-itc-provider="${NOTARIZATION_ITC_PROVIDER}" notarize-editor'
      },
      {
        name: 'Archive editor',
        run: 'ci/ci.sh --branch=$GITHUB_REF archive-editor'
      }]
